(window.webpackJsonpBalmUI=window.webpackJsonpBalmUI||[]).push([[0],{"+Hk6":function(t,e){t.exports='<p>Default Usage</p>\n<pre><code class="language-js">import Vue from &#39;vue&#39;;\nimport BalmUI from &#39;balm-ui&#39;;\n\nVue.use(BalmUI, {\n  // Optional. Overwrite `&lt;ui-slider&gt;` props.\n  UiSlider: {\n    // some props\n  }\n});</code></pre>\n<p>Standalone Usage</p>\n<pre><code class="language-js">import Vue from &#39;vue&#39;;\nimport UiSlider from &#39;balm-ui/components/slider&#39;;\n\n// (Recommended) Splitting CSS out from the main application, see BalmUI advanced usage.\nimport &#39;balm-ui/components/core.css&#39;;\nimport &#39;balm-ui/components/slider.css&#39;;\n\n// Optional. Overwrite `&lt;ui-slider&gt;` props.\nVue.use(UiSlider, {\n  // some props\n});</code></pre>\n'},"+Lqg":function(t,e){t.exports='<pre><code class="language-html">&lt;section class=&quot;demo-surfaces&quot;&gt;\n  &lt;figure class=&quot;demo-surface&quot; v-shadow=&quot;0&quot;&gt;\n    &lt;figcaption&gt;0dp (&lt;code&gt;mdc-elevation--z0&lt;/code&gt;)&lt;/figcaption&gt;\n  &lt;/figure&gt;\n  &lt;figure v-for=&quot;i in 24&quot;\n    :key=&quot;i&quot;\n    class=&quot;demo-surface&quot;\n    v-shadow=&quot;i&quot;&gt;\n    &lt;figcaption&gt;{{ i }}dp (&lt;code&gt;mdc-elevation--z{{ i }}&lt;/code&gt;)&lt;/figcaption&gt;\n  &lt;/figure&gt;\n&lt;/section&gt;</code></pre>\n'},"+LzF":function(t,e){t.exports='<pre><code class="language-html">&lt;ui-list-group class=&quot;demo-list-group--custom&quot;&gt;\n  &lt;ui-list-group-subheader&gt;Folders&lt;/ui-list-group-subheader&gt;\n  &lt;ui-list twoLine avatar class=&quot;demo-list demo-list--with-avatars demo-list--custom demo-list--icon-placeholders&quot;&gt;\n    &lt;ui-item v-for=&quot;(item, index) in folders&quot;\n      :key=&quot;index&quot;\n      :firstIcon=&quot;item.first&quot;\n      :lastIcon=&quot;item.last&quot;&gt;\n      &lt;ui-item-text&gt;{{ item.text }}&lt;/ui-item-text&gt;\n      &lt;ui-item-subtext&gt;{{ item.subtext }}&lt;/ui-item-subtext&gt;\n    &lt;/ui-item&gt;\n  &lt;/ui-list&gt;\n\n  &lt;ui-list-divider inset&gt;&lt;/ui-list-divider&gt;\n\n  &lt;ui-list-group-subheader&gt;Files&lt;/ui-list-group-subheader&gt;\n  &lt;ui-list twoLine avatar class=&quot;demo-list demo-list--with-avatars demo-list--custom demo-list--icon-placeholders&quot;&gt;\n    &lt;ui-item v-for=&quot;(item, index) in files&quot;\n      :key=&quot;index&quot;\n      :firstIcon=&quot;item.first&quot;\n      :lastIcon=&quot;item.last&quot;&gt;\n      &lt;ui-item-text&gt;{{ item.text }}&lt;/ui-item-text&gt;\n      &lt;ui-item-subtext&gt;{{ item.subtext }}&lt;/ui-item-subtext&gt;\n    &lt;/ui-item&gt;\n  &lt;/ui-list&gt;\n&lt;/ui-list-group&gt;</code></pre>\n'},"+eER":function(t,e){t.exports='<pre><code class="language-html">&lt;div class=&quot;icons-preview-code&quot;&gt;\n  &lt;div v-for=&quot;i in [18, 24, 36, 48]&quot; :key=&quot;i&quot; class=&quot;icons-preview&quot;&gt;\n    &lt;ui-icon :size=&quot;i&quot;&gt;face&lt;/ui-icon&gt;\n    &lt;div class=&quot;icon-caption&quot;&gt;\n      {{ i }}px\n      {{ i === 24 ? &#39;(default)&#39; : &#39;&#39; }}\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/div&gt;</code></pre>\n'},"+g3H":function(t,e){t.exports='<pre><code class="language-html">&lt;ui-radio name=&quot;sex&quot; value=&quot;M&quot; :model=&quot;gender&quot; @change=&quot;onChange&quot;&gt;Male&lt;/ui-radio&gt;\n&lt;ui-radio name=&quot;sex&quot; value=&quot;F&quot; :model=&quot;gender&quot; @change=&quot;onChange&quot;&gt;Female&lt;/ui-radio&gt;</code></pre>\n<pre><code class="language-js">export default {\n  data() {\n    return {\n      gender: &#39;&#39;\n    };\n  },\n  methods: {\n    onChange(val) {\n      this.gender = val;\n    }\n  }\n};</code></pre>\n'},"+hh3":function(t,e){t.exports='<pre><code class="language-html">&lt;ui-button raised&gt;Baseline&lt;/ui-button&gt;\n&lt;ui-button raised dense&gt;Dense&lt;/ui-button&gt;\n&lt;ui-button raised class=&quot;secondary-filled-button&quot;&gt;Secondary&lt;/ui-button&gt;\n&lt;ui-button raised icon=&quot;favorite&quot;&gt;Icon&lt;/ui-button&gt;\n&lt;ui-button raised&gt;\n  &lt;template slot-scope=&quot;{ className }&quot;&gt;\n    &lt;!-- Custom SVG --&gt;\n    &lt;ui-logo :class=&quot;className.icon&quot;&gt;&lt;/ui-logo&gt;\n    SVG Icon\n  &lt;/template&gt;\n&lt;/ui-button&gt;\n&lt;ui-link raised&gt;Link&lt;/ui-link&gt;</code></pre>\n<pre><code class="language-css">/* Sass code */\n.mdc-button.secondary-filled-button {\n  @include mdc-button-filled-accessible($mdc-theme-secondary);\n}</code></pre>\n'},"/7CV":function(t,e){t.exports='<pre><code class="language-html">&lt;ui-list-group&gt;\n  &lt;ui-list-group-subheader&gt;List 1&lt;/ui-list-group-subheader&gt;\n  &lt;ui-list class=&quot;demo-list&quot;&gt;\n    &lt;ui-item v-for=&quot;i in 3&quot; :key=&quot;i&quot;&gt;Single-line item&lt;/ui-item&gt;\n  &lt;/ui-list&gt;\n  &lt;ui-list-divider&gt;&lt;/ui-list-divider&gt;\n  &lt;ui-list-group-subheader&gt;List 2&lt;/ui-list-group-subheader&gt;\n  &lt;ui-list class=&quot;demo-list&quot;&gt;\n    &lt;ui-item v-for=&quot;i in 3&quot; :key=&quot;i&quot;&gt;Single-line item&lt;/ui-item&gt;\n  &lt;/ui-list&gt;\n&lt;/ui-list-group&gt;</code></pre>\n'},"/epX":function(t,e){t.exports='<pre><code class="language-html">&lt;h1 :class=&quot;$tt(&#39;headline1&#39;)&quot;&gt;Headline 1&lt;/h1&gt;\n&lt;h2 :class=&quot;$tt(&#39;headline2&#39;)&quot;&gt;Headline 2&lt;/h2&gt;\n&lt;h3 :class=&quot;$tt(&#39;headline3&#39;)&quot;&gt;Headline 3&lt;/h3&gt;\n&lt;h4 :class=&quot;$tt(&#39;headline4&#39;)&quot;&gt;Headline 4&lt;/h4&gt;\n&lt;h5 :class=&quot;$tt(&#39;headline5&#39;)&quot;&gt;Headline 5&lt;/h5&gt;\n&lt;h6 :class=&quot;$tt(&#39;headline6&#39;)&quot;&gt;Headline 6&lt;/h6&gt;\n\n&lt;h6 :class=&quot;$tt(&#39;subtitle1&#39;)&quot;&gt;Subtitle 1&lt;/h6&gt;\n&lt;h6 :class=&quot;$tt(&#39;subtitle2&#39;)&quot;&gt;Subtitle 2&lt;/h6&gt;\n\n&lt;p :class=&quot;$tt(&#39;body1&#39;)&quot;&gt;\n  Body 1 paragraph. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt\n  ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n  aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore\n  eu fugiat nulla pariatur.\n&lt;/p&gt;\n&lt;p :class=&quot;$tt(&#39;body2&#39;)&quot;&gt;\n  Body 2 paragraph. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt\n  ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n  aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore\n  eu fugiat nulla pariatur.\n&lt;/p&gt;\n\n&lt;div&gt;&lt;span :class=&quot;$tt(&#39;button&#39;)&quot;&gt;Button text&lt;/span&gt;&lt;/div&gt;\n\n&lt;div&gt;&lt;span :class=&quot;$tt(&#39;caption&#39;)&quot;&gt;Caption text&lt;/span&gt;&lt;/div&gt;\n\n&lt;div&gt;&lt;span :class=&quot;$tt(&#39;overline&#39;)&quot;&gt;Overline text&lt;/span&gt;&lt;/div&gt;</code></pre>\n'},"/tRe":function(t,e){t.exports='<pre><code class="language-html">&lt;section :dir=&quot;controls.rtl ? &#39;rtl&#39; : null&quot;&gt;\n  &lt;ui-select id=&quot;full-func-js-select&quot;\n    v-model=&quot;selected.value&quot;\n    :selectedIndex=&quot;selected.index&quot;\n    :options=&quot;options&quot;\n    :class=&quot;{&#39;demo-select-custom-colors&#39;: controls.customColor}&quot;\n    :disabled=&quot;controls.disabled&quot;\n    @selected=&quot;onSelected($event)&quot;&gt;\n    Food Group\n  &lt;/ui-select&gt;\n\n  &lt;ui-button raised\n    @click=&quot;$balmUI.onChange(&#39;selected.index&#39;, 0)&quot;&gt;\n    Set Selected Index (0)\n  &lt;/ui-button&gt;\n  &lt;ui-button raised\n    @click=&quot;$balmUI.onChange(&#39;selected.value&#39;, &#39;meat&#39;)&quot;&gt;\n    Set Value to Meat\n  &lt;/ui-button&gt;\n&lt;/section&gt;</code></pre>\n<pre><code class="language-js">const options = [\n  {\n    label: &#39;Bread, Cereal, Rice, and Pasta&#39;,\n    value: &#39;grains&#39;\n  },\n  {\n    label: &#39;Vegetables&#39;,\n    value: &#39;vegetables&#39;,\n    disabled: true\n  },\n  {\n    label: &#39;Fruit&#39;,\n    value: &#39;fruit&#39;\n  },\n  {\n    label: &#39;Milk, Yogurt, and Cheese&#39;,\n    value: &#39;dairy&#39;\n  },\n  {\n    label: &#39;Meat, Poultry, Fish, Dry Beans, Eggs, and Nuts&#39;,\n    value: &#39;meat&#39;\n  },\n  {\n    label: &#39;Fats, Oils, and Sweets&#39;,\n    value: &#39;fats&#39;\n  }\n];\n\nexport default {\n  data() {\n    return {\n      options,\n      selected: {\n        value: &#39;&#39;,\n        index: 0\n      },\n      controls: {\n        rtl: false,\n        customColor: false,\n        disabled: false\n      }\n    };\n  },\n  methods: {\n    onSelected(selected) {\n      this.selected = selected;\n    }\n  }\n};</code></pre>\n'},"0HsE":function(t,e){t.exports='<pre><code class="language-html">&lt;ui-switch id=&quot;basic-switch&quot;\n  :trueValue=&quot;1&quot;\n  :falseValue=&quot;0&quot;\n  v-model=&quot;toggle1&quot;&gt;\n  {{ toggle1 }}\n&lt;/ui-switch&gt;\n\n&lt;ui-switch id=&quot;basic-switch-custom&quot;\n  class=&quot;demo-switch--custom&quot;\n  trueValue=&quot;on&quot;\n  falseValue=&quot;off&quot;\n  v-model=&quot;toggle2&quot;&gt;\n  {{ toggle2 }} (custom color)\n&lt;/ui-switch&gt;</code></pre>\n<pre><code class="language-js">export default {\n  data() {\n    return {\n      toggle1: 0,\n      toggle2: &#39;on&#39;\n    };\n  }\n};</code></pre>\n<pre><code class="language-css">/* Sass code */\n.demo-switch--custom {\n  $color: $material-color-red-500;\n\n  @include mdc-switch-track-color($color);\n  @include mdc-switch-knob-color($color);\n  @include mdc-switch-focus-indicator-color($color);\n}</code></pre>\n'},"0Uhr":function(t,e){t.exports='<pre><code class="language-html">&lt;ui-fab&gt;\n  &lt;i class=&quot;fa fa-flag fa-lg&quot;&gt;&lt;/i&gt;\n&lt;/ui-fab&gt;\n&lt;ui-fab&gt;\n  &lt;i class=&quot;fa fa-smile-o fa-lg&quot;&gt;&lt;/i&gt;\n&lt;/ui-fab&gt;\n&lt;ui-fab&gt;\n  &lt;i class=&quot;fa fa-camera-retro fa-lg&quot;&gt;&lt;/i&gt;\n&lt;/ui-fab&gt;\n&lt;ui-fab&gt;\n  &lt;i class=&quot;fa fa-spinner fa-pulse fa-lg fa-fw&quot;&gt;&lt;/i&gt;\n&lt;/ui-fab&gt;</code></pre>\n'},"1Pfi":function(t,e){t.exports='<pre><code class="language-html">&lt;ui-grid class=&quot;demo-grid&quot;&gt;\n  &lt;ui-grid-cell v-for=&quot;i in 12&quot;\n    :key=&quot;i&quot;\n    class=&quot;demo-cell&quot;\n    colspan=&quot;1&quot;&gt;1&lt;/ui-grid-cell&gt;\n&lt;/ui-grid&gt;</code></pre>\n'},"1Xkv":function(t,e){t.exports='<pre><code class="language-html">&lt;ui-button outlined&gt;Baseline&lt;/ui-button&gt;\n&lt;ui-button outlined dense&gt;Dense&lt;/ui-button&gt;\n&lt;ui-button outlined class=&quot;secondary-outlined-button&quot;&gt;Secondary&lt;/ui-button&gt;\n&lt;ui-button outlined icon=&quot;favorite&quot;&gt;Icon&lt;/ui-button&gt;\n&lt;ui-button outlined&gt;\n  &lt;template slot-scope=&quot;{ className }&quot;&gt;\n    &lt;!-- Custom SVG --&gt;\n    &lt;ui-logo :class=&quot;className.icon&quot;&gt;&lt;/ui-logo&gt;\n    SVG Icon\n  &lt;/template&gt;\n&lt;/ui-button&gt;\n&lt;ui-link outlined&gt;Link&lt;/ui-link&gt;</code></pre>\n<pre><code class="language-css">/* Sass code */\n.mdc-button.secondary-outlined-button {\n  @include mdc-button-ink-color($mdc-theme-secondary);\n  @include mdc-button-outline-color($mdc-theme-secondary);\n}</code></pre>\n'},"1fpl":function(t,e){t.exports='<pre><code class="language-html">&lt;fieldset class=&quot;demo-fieldset--color&quot;&gt;\n  &lt;legend :class=&quot;$tt(&#39;subtitle1&#39;)&quot;&gt;Theme colors as text&lt;/legend&gt;\n\n  &lt;div class=&quot;demo-theme-color-group&quot;&gt;\n    &lt;div class=&quot;demo-theme-color-swatches&quot;&gt;\n      &lt;div :class=&quot;[\n        &#39;demo-theme-color-swatch demo-theme-color-swatch--elevated&#39;,\n        $themeColor(&#39;primary&#39;),\n        $tt(&#39;body2&#39;)]&quot;&gt;Primary&lt;/div&gt;\n    &lt;/div&gt;\n    &lt;div class=&quot;demo-theme-color-swatches&quot;&gt;\n      &lt;div :class=&quot;[\n        &#39;demo-theme-color-swatch demo-theme-color-swatch--elevated&#39;,\n        $themeColor(&#39;secondary&#39;),\n        $tt(&#39;body2&#39;)]&quot;&gt;Secondary&lt;/div&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/fieldset&gt;\n\n&lt;fieldset class=&quot;demo-fieldset--color&quot;&gt;\n  &lt;legend :class=&quot;$tt(&#39;subtitle1&#39;)&quot;&gt;Theme colors as background&lt;/legend&gt;\n\n  &lt;div class=&quot;demo-theme-color-group&quot;&gt;\n    &lt;div class=&quot;demo-theme-color-swatches&quot;&gt;\n      &lt;div :class=&quot;[\n        &#39;demo-theme-color-swatch demo-theme-color-swatch--elevated&#39;,\n        $themeColor(&#39;primary-bg&#39;),\n        $themeColor(&#39;on-primary&#39;)]&quot;&gt;Primary&lt;/div&gt;\n    &lt;/div&gt;\n    &lt;div class=&quot;demo-theme-color-swatches&quot;&gt;\n      &lt;div :class=&quot;[\n        &#39;demo-theme-color-swatch demo-theme-color-swatch--elevated&#39;,\n        $themeColor(&#39;secondary-bg&#39;),\n        $themeColor(&#39;on-secondary&#39;)]&quot;&gt;Secondary&lt;/div&gt;\n    &lt;/div&gt;\n    &lt;div class=&quot;demo-theme-color-swatches&quot;&gt;\n      &lt;div :class=&quot;[\n        &#39;demo-theme-color-swatch demo-theme-color-swatch--elevated&#39;,\n        $themeColor(&#39;background&#39;),\n        $textColor(&#39;primary&#39;)]&quot;&gt;Background&lt;/div&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/fieldset&gt;</code></pre>\n'},"2qo9":function(t,e){t.exports='<pre><code class="language-html">&lt;h4&gt;No leading icon (selectedIndexes: {{ selectedValue }})&lt;/h4&gt;\n&lt;ui-chip-set filter v-model=&quot;selectedValue&quot;&gt;\n  &lt;ui-chip v-for=&quot;(item, index) in filterList&quot;\n    :key=&quot;index&quot;\n    class=&quot;demo-chip&quot;&gt;\n    &lt;ui-chip-checkmark&gt;&lt;/ui-chip-checkmark&gt;\n    &lt;ui-chip-text&gt;{{ item }}&lt;/ui-chip-text&gt;\n  &lt;/ui-chip&gt;\n&lt;/ui-chip-set&gt;\n\n&lt;h4&gt;With leading icon (selectedIndexes: {{ selectedValue2 }})&lt;/h4&gt;\n&lt;ui-chip-set filter v-model=&quot;selectedValue2&quot;&gt;\n  &lt;ui-chip v-for=&quot;(item, index) in filterList2&quot;\n    :key=&quot;index&quot;\n    class=&quot;demo-chip&quot;&gt;\n    &lt;ui-chip-leading-icon :hidden=&quot;selectedValue2.includes(index)&quot;&gt;face&lt;/ui-chip-leading-icon&gt;\n    &lt;ui-chip-checkmark&gt;&lt;/ui-chip-checkmark&gt;\n    &lt;ui-chip-text&gt;{{ item }}&lt;/ui-chip-text&gt;\n  &lt;/ui-chip&gt;\n&lt;/ui-chip-set&gt;</code></pre>\n<pre><code class="language-js">export default {\n  data() {\n    return {\n      selectedValue: [1, 2],\n      selectedValue2: [0],\n      filterList: [&#39;Tops&#39;, &#39;Bottoms&#39;, &#39;Shoes&#39;, &#39;Accessories&#39;],\n      filterList2: [&#39;Alice&#39;, &#39;Bob&#39;, &#39;Charlie&#39;, &#39;David&#39;]\n    };\n  }\n};</code></pre>\n'},"4L9t":function(t,e){t.exports='<pre><code class="language-html">&lt;ui-top-app-bar fixed contentSelector=&quot;.demo-main&quot; menuId=&quot;demo-menu&quot;&gt;\n  Temporary Drawer\n&lt;/ui-top-app-bar&gt;\n\n&lt;ui-temporary-drawer menuSelector=&quot;#demo-menu&quot;&gt;\n  &lt;ui-drawer-header :innerClass=&quot;[$themeColor(&#39;on-primary&#39;), $themeColor(&#39;primary-bg&#39;)]&quot;&gt;\n    Header here\n  &lt;/ui-drawer-header&gt;\n  &lt;ui-drawer-content&gt;\n    &lt;ui-list-group&gt;\n      &lt;ui-list-nav&gt;\n        &lt;ui-item-link v-for=&quot;(item, index) in menu1&quot; :key=&quot;index&quot; :firstIcon=&quot;item.icon&quot;&gt;\n          {{ item.name }}\n        &lt;/ui-item-link&gt;\n      &lt;/ui-list-nav&gt;\n      &lt;ui-list-divider&gt;&lt;/ui-list-divider&gt;\n      &lt;ui-list-nav&gt;\n        &lt;ui-item-link v-for=&quot;(item, index) in menu2&quot; :key=&quot;index&quot; :firstIcon=&quot;item.icon&quot;&gt;\n          {{ item.name }}\n        &lt;/ui-item-link&gt;\n      &lt;/ui-list-nav&gt;\n    &lt;/ui-list-group&gt;\n  &lt;/ui-drawer-content&gt;\n&lt;/ui-temporary-drawer&gt;\n\n&lt;main class=&quot;demo-main&quot;&gt;\n  &lt;h1 :class=&quot;$tt(&#39;headline4&#39;)&quot;&gt;Temporary Drawer&lt;/h1&gt;\n  &lt;p :class=&quot;$tt(&#39;body1&#39;)&quot;&gt;Click the menu icon above to open.&lt;/p&gt;\n&lt;/main&gt;</code></pre>\n'},"5VFu":function(t,e){t.exports="<pre><code>// TODO</code></pre>"},"5qYn":function(t,e){t.exports='<p>Default Usage</p>\n<pre><code class="language-js">import Vue from &#39;vue&#39;;\nimport BalmUI from &#39;balm-ui&#39;;\n\nVue.use(BalmUI, {\n  // Optional. Overwrite `&lt;ui-grid&gt;` props.\n  UiGrid: {\n    // some props\n  }\n});</code></pre>\n<p>Standalone Usage</p>\n<pre><code class="language-js">import Vue from &#39;vue&#39;;\nimport UiGridComponents from &#39;balm-ui/components/grid&#39;;\n\n// (Recommended) Splitting CSS out from the main application, see BalmUI advanced usage.\nimport &#39;balm-ui/components/core.css&#39;;\nimport &#39;balm-ui/components/grid.css&#39;;\n\nVue.use(UiGridComponents, {\n  // Optional. Overwrite `&lt;ui-grid&gt;` props.\n  UiGrid: {\n    // some props\n  }\n});</code></pre>\n'},"6iKR":function(t,e){t.exports='<pre><code class="language-html">&lt;ui-snackbar\n  v-model=&quot;active&quot;\n  :message=&quot;message&quot;\n  :actionHandler=&quot;actionHandler&quot;\n  :multiline=&quot;multiline&quot;\n  :actionOnBottom=&quot;actionOnBottom&quot;\n  :actionText=&quot;actionText&quot;\n  :dismiss=&quot;dismiss&quot;&gt;&lt;/ui-snackbar&gt;</code></pre>\n<pre><code class="language-js">export default {\n  data() {\n    return {\n      active: false,\n      message: &#39;Hello Snackbar&#39;,\n      multiline: false,\n      actionOnBottom: false,\n      actionText: &#39;Undo&#39;,\n      dismiss: true\n    };\n  }\n};</code></pre>\n'},"7/oN":function(t,e){t.exports='<pre><code class="language-html">&lt;section&gt;\n  &lt;h3&gt;Graphic&lt;/h3&gt;\n  &lt;ui-list class=&quot;demo-list demo-list--icon-placeholders&quot;&gt;\n    &lt;ui-item v-for=&quot;i in 3&quot; :key=&quot;i&quot; firstPlaceholder&gt;\n      Single-line item\n    &lt;/ui-item&gt;\n  &lt;/ui-list&gt;\n&lt;/section&gt;\n\n&lt;section&gt;\n  &lt;h3&gt;Graphic (dense)&lt;/h3&gt;\n  &lt;ui-list dense class=&quot;demo-list demo-list--icon-placeholders&quot;&gt;\n    &lt;ui-item v-for=&quot;i in 3&quot; :key=&quot;i&quot; firstPlaceholder&gt;\n      Single-line item\n    &lt;/ui-item&gt;\n  &lt;/ui-list&gt;\n&lt;/section&gt;\n\n&lt;section&gt;\n  &lt;h3&gt;Graphic Example - Icon with Text&lt;/h3&gt;\n  &lt;ui-list class=&quot;demo-list&quot;&gt;\n    &lt;ui-item v-for=&quot;(item, index) in items&quot;\n      :key=&quot;index&quot;\n      :firstIcon=&quot;item.icon&quot;&gt;\n      {{ item.text }}\n    &lt;/ui-item&gt;\n  &lt;/ui-list&gt;\n&lt;/section&gt;</code></pre>\n'},"8UR+":function(t,e){t.exports='<pre><code class="language-html">&lt;ui-button unelevated class=&quot;demo-ink-color&quot; icon=&quot;favorite&quot;&gt;Ink Color&lt;/ui-button&gt;\n&lt;ui-button outlined class=&quot;demo-icon-color&quot; icon=&quot;favorite&quot;&gt;Icon Color&lt;/ui-button&gt;</code></pre>\n<pre><code class="language-css">/* Sass code */\n.demo-ink-color {\n  @include mdc-button-icon-color(white);\n  @include mdc-button-ink-color(orange);\n  @include mdc-states(orange);\n}\n\n.demo-icon-color {\n  @include mdc-button-icon-color(orange);\n}</code></pre>\n'},"8bja":function(t,e){t.exports='<pre><code class="language-html">&lt;ui-datepicker :config=&quot;config&quot;\n  :model=&quot;date&quot;\n  placeholder=&quot;Select Datetime..&quot;\n  toggle\n  clear\n  @change=&quot;onChange(&#39;date&#39;, $event)&quot;&gt;\n  &lt;template slot=&quot;toggle&quot;&gt;\n    &lt;i class=&quot;fa fa-calendar&quot;&gt;&lt;/i&gt;\n  &lt;/template&gt;\n  &lt;template slot=&quot;clear&quot;&gt;\n    &lt;i class=&quot;fa fa-close&quot;&gt;&lt;/i&gt;\n  &lt;/template&gt;\n&lt;/ui-datepicker&gt;</code></pre>\n<pre><code class="language-js">export default {\n  data() {\n    return {\n      date: &#39;&#39;,\n      config: {\n        enableTime: true\n      }\n    };\n  },\n  methods: {\n    onChange(field, value) {\n      this[field] = value;\n    }\n  }\n};</code></pre>\n'},"9+tc":function(t,e){t.exports='<p>Default Usage</p>\n<pre><code class="language-js">import Vue from &#39;vue&#39;;\nimport BalmUI from &#39;balm-ui&#39;;\n\nVue.use(BalmUI);</code></pre>\n<p>Standalone Usage</p>\n<pre><code class="language-js">import Vue from &#39;vue&#39;;\nimport elevation from &#39;balm-ui/directives/elevation&#39;;\n\n// (Recommended) Splitting CSS out from the main application, see BalmUI advanced usage.\nimport &#39;balm-ui/components/core.css&#39;; // (Include &#39;directives/elevation.css&#39;)\n// OR\nimport &#39;balm-ui/directives/elevation.css&#39;;\n\nVue.directive(elevation.name, elevation);</code></pre>\n'},"9pG4":function(t,e){t.exports='<p>Default Usage</p>\n<pre><code class="language-js">import Vue from &#39;vue&#39;;\nimport BalmUI from &#39;balm-ui&#39;;\n\nVue.use(BalmUI, {\n  // Optional. Overwrite `&lt;ui-menu&gt;` props.\n  UiMenu: {\n    // some props\n  }\n});</code></pre>\n<p>Standalone Usage</p>\n<pre><code class="language-js">import Vue from &#39;vue&#39;;\nimport UiMenuComponents from &#39;balm-ui/components/menu&#39;;\n\n// (Recommended) Splitting CSS out from the main application, see BalmUI advanced usage.\nimport &#39;balm-ui/components/core.css&#39;;\nimport &#39;balm-ui/components/menu.css&#39;;\n\nVue.use(UiMenuComponents, {\n  // Optional. Overwrite `&lt;ui-menu&gt;` props.\n  UiMenu: {\n    // some props\n  }\n});</code></pre>\n'},AYqF:function(t,e){t.exports='<pre><code class="language-html">&lt;ui-button unelevated class=&quot;big-round-corner-button&quot;&gt;Big Corner Radius&lt;/ui-button&gt;\n&lt;ui-button outlined class=&quot;thick-outlined-button&quot;&gt;Thick Outline Width&lt;/ui-button&gt;</code></pre>\n<pre><code class="language-css">/* Sass code */\n.mdc-button.big-round-corner-button {\n  @include mdc-button-corner-radius(8px);\n}\n\n.mdc-button.secondary-outlined-button {\n  @include mdc-button-ink-color($mdc-theme-secondary);\n  @include mdc-button-outline-color($mdc-theme-secondary);\n}</code></pre>\n'},AcTu:function(t,e){t.exports='<pre><code class="language-html">&lt;ui-checkbox id=&quot;jack&quot; value=&quot;Jack&quot; v-model=&quot;checkedNames&quot;&gt;Jack&lt;/ui-checkbox&gt;\n&lt;ui-checkbox id=&quot;john&quot; value=&quot;John&quot; v-model=&quot;checkedNames&quot;&gt;John&lt;/ui-checkbox&gt;\n&lt;ui-checkbox id=&quot;mike&quot; value=&quot;Mike&quot; v-model=&quot;checkedNames&quot;&gt;Mike&lt;/ui-checkbox&gt;</code></pre>\n<pre><code class="language-js">export default {\n  data() {\n    return {\n      checkedNames: []\n    };\n  }\n};</code></pre>\n'},"BV+e":function(t,e){t.exports='<p>Default Usage</p>\n<pre><code class="language-js">import Vue from &#39;vue&#39;;\nimport BalmUI from &#39;balm-ui&#39;;\n\nVue.use(BalmUI, {\n  // Optional. Overwrite `&lt;ui-select&gt;` props.\n  UiSelect: {\n    // some props\n  }\n});</code></pre>\n<p>Standalone Usage</p>\n<pre><code class="language-js">import Vue from &#39;vue&#39;;\nimport UiSelect from &#39;balm-ui/components/select&#39;;\n\n// (Recommended) Splitting CSS out from the main application, see BalmUI advanced usage.\nimport &#39;balm-ui/components/core.css&#39;;\nimport &#39;balm-ui/components/select.css&#39;;\n\n// Optional. Overwrite `&lt;ui-select&gt;` props.\nVue.use(UiSelect, {\n  // some props\n});</code></pre>\n'},BapH:function(t,e){t.exports='<p>Default Usage</p>\n<pre><code class="language-js">import Vue from &#39;vue&#39;;\nimport BalmUI from &#39;balm-ui&#39;;\n\nVue.use(BalmUI, {\n  // Optional. Overwrite the param of `$tt()`.\n  typography: [&#39;custom-module-1&#39;, &#39;custom-module-2&#39;]\n});</code></pre>\n<p>Standalone Usage</p>\n<pre><code class="language-js">import Vue from &#39;vue&#39;;\nimport typography from &#39;balm-ui/plugins/typography&#39;;\n\n// (Recommended) Splitting CSS out from the main application, see BalmUI advanced usage.\nimport &#39;balm-ui/components/core.css&#39;; // (Include &#39;plugins/typography.css&#39;)\n// OR\nimport &#39;balm-ui/plugins/typography.css&#39;;\nimport &#39;/path/to/custom-typography.css&#39;; // Optional.\n\n// Optional. Overwrite the param of `$tt()`.\nVue.use(typography, [&#39;custom-module-1&#39;, &#39;custom-module-2&#39;]);</code></pre>\n'},BnzD:function(t,e){t.exports='<pre><code class="language-js">// gulpfile.js\n\nbalm.config = {\n  ...\n  scripts: {\n    ...\n    alias: {\n      flatpickrCss: &#39;flatpickr/dist/flatpickr.min.css&#39;\n    },\n  ...\n};</code></pre>\n<pre><code class="language-js">// /path/to/your_entry.js\n...\nimport &#39;flatpickrCss&#39;;</code></pre>\n'},"C+ac":function(t,e){t.exports='<pre><code class="language-html">&lt;section class=&quot;example&quot;&gt;\n  &lt;div&gt;\n    &lt;h2&gt;Unbounded&lt;/h2&gt;\n    &lt;ui-icon class=&quot;demo-surface&quot; data-mdc-ripple-is-unbounded v-ripple.unbounded&gt;\n      favorite\n    &lt;/ui-icon&gt;\n  &lt;/div&gt;\n  &lt;div&gt;\n    &lt;h2&gt;Unbounded - CSS Only&lt;/h2&gt;\n    &lt;ui-icon class=&quot;demo-surface&quot; data-mdc-ripple-is-unbounded v-ripple:cssOnly.unbounded&gt;\n      favorite\n    &lt;/ui-icon&gt;\n  &lt;/div&gt;\n&lt;/section&gt;</code></pre>\n<pre><code class="language-css">.demo-surface[data-mdc-ripple-is-unbounded] {\n  /* Override width/height from above to match icon size, and adjust padding for hitbox */\n  width: 24px;\n  height: 24px;\n  padding: 12px;\n}</code></pre>\n'},EGEq:function(t,e){t.exports='<pre><code class="language-html">&lt;ui-datepicker :config=&quot;config&quot;\n  :model=&quot;date&quot;\n  placeholder=&quot;Select Date Range..&quot;\n  @change=&quot;onChange(&#39;date&#39;, $event)&quot;&gt;&lt;/ui-datepicker&gt;</code></pre>\n<pre><code class="language-js">export default {\n  data() {\n    return {\n      date: &#39;&#39;,\n      config: {\n        mode: &#39;range&#39;\n      }\n    };\n  },\n  methods: {\n    onChange(field, value) {\n      this[field] = value;\n    }\n  }\n};</code></pre>\n'},EQdG:function(t,e){t.exports='<pre><code class="language-html">&lt;h6 :class=&quot;$tt(&#39;headline6&#39;)&quot;&gt;Start Alignment&lt;/h6&gt;\n&lt;div class=&quot;demo&quot;&gt;\n  &lt;ui-tab-bar v-model=&quot;active&quot; align=&quot;start&quot;&gt;\n    &lt;ui-tab v-for=&quot;(tab, index) in tabs&quot; :key=&quot;index&quot; minWidth&gt;\n      {{ tab.text }}\n    &lt;/ui-tab&gt;\n  &lt;/ui-tab-bar&gt;\n&lt;/div&gt;\n\n&lt;h6 :class=&quot;$tt(&#39;headline6&#39;)&quot;&gt;Center Alignment&lt;/h6&gt;\n&lt;div class=&quot;demo&quot;&gt;\n  &lt;ui-tab-bar v-model=&quot;active&quot; align=&quot;center&quot;&gt;\n    &lt;ui-tab v-for=&quot;(tab, index) in tabs&quot; :key=&quot;index&quot; minWidth&gt;\n      {{ tab.text }}\n    &lt;/ui-tab&gt;\n  &lt;/ui-tab-bar&gt;\n&lt;/div&gt;\n\n&lt;h6 :class=&quot;$tt(&#39;headline6&#39;)&quot;&gt;End Alignment&lt;/h6&gt;\n&lt;div class=&quot;demo&quot;&gt;\n  &lt;ui-tab-bar v-model=&quot;active&quot; align=&quot;end&quot;&gt;\n    &lt;ui-tab v-for=&quot;(tab, index) in tabs&quot; :key=&quot;index&quot; minWidth&gt;\n      {{ tab.text }}\n    &lt;/ui-tab&gt;\n  &lt;/ui-tab-bar&gt;\n&lt;/div&gt;</code></pre>\n'},FArz:function(t,e){t.exports='<pre><code class="language-html">&lt;section&gt;\n  &lt;h3&gt;Example - Avatar with Text and Icon&lt;/h3&gt;\n  &lt;ui-list avatar class=&quot;demo-list demo-list--with-avatars demo-list--avatar-and-meta-icon&quot;&gt;\n    &lt;ui-item v-for=&quot;(item, index) in items&quot;\n      :key=&quot;index&quot;\n      :firstImage=&quot;item.avatar&quot;\n      :lastIcon=&quot;item.favorite ? &#39;favorite&#39; : &#39;favorite_border&#39;&quot;&gt;\n      {{ item.name }}\n    &lt;/ui-item&gt;\n  &lt;/ui-list&gt;\n&lt;/section&gt;</code></pre>\n'},FKpq:function(t,e){t.exports='<pre><code class="language-html">&lt;ui-checkbox id=&quot;checkbox&quot; v-model=&quot;checked&quot;&gt;\n  {{checked}}\n&lt;/ui-checkbox&gt;</code></pre>\n<pre><code class="language-js">export default {\n  data() {\n    return {\n      checked: false\n    };\n  }\n};</code></pre>\n'},FME5:function(t,e){t.exports='<pre><code class="language-html">&lt;ui-select outlined&gt;\n  Food Group\n&lt;/ui-select&gt;</code></pre>\n'},FUGW:function(t,e){t.exports='<pre><code class="language-html">&lt;ui-card class=&quot;demo-card demo-card--photo&quot;&gt;\n  &lt;ui-card-content class=&quot;demo-card__primary-action&quot; v-ripple&gt;\n    &lt;ui-card-media square class=&quot;demo-card__media&quot;&gt;\n      &lt;ui-card-media-content class=&quot;demo-card__media-content--with-title&quot;&gt;\n        &lt;div :class=&quot;[$tt(&#39;subtitle2&#39;), &#39;demo-card__media-title&#39;]&quot;&gt;\n          Vacation Photos\n        &lt;/div&gt;\n      &lt;/ui-card-media-content&gt;\n    &lt;/ui-card-media&gt;\n  &lt;/ui-card-content&gt;\n  &lt;ui-card-actions&gt;\n    &lt;ui-card-icons&gt;\n      &lt;ui-icon-button actionIcon :on=&quot;icon1.on&quot; :off=&quot;icon1.off&quot;&gt;&lt;/ui-icon-button&gt;\n      &lt;ui-icon-button actionIcon :on=&quot;icon2.on&quot; :off=&quot;icon2.off&quot;&gt;&lt;/ui-icon-button&gt;\n      &lt;ui-icon-button actionIcon&gt;share&lt;/ui-icon-button&gt;\n    &lt;/ui-card-icons&gt;\n  &lt;/ui-card-actions&gt;\n&lt;/ui-card&gt;</code></pre>\n<pre><code class="language-js">export default {\n  data() {\n    return {\n      icon1: {\n        on: {\n          content: &#39;favorite&#39;,\n          label: &#39;Remove From Favorites&#39;\n        },\n        off: {\n          content: &#39;favorite_border&#39;,\n          label: &#39;Add to Favorites&#39;\n        }\n      },\n      icon2: {\n        on: {\n          content: &#39;bookmark&#39;,\n          label: &#39;Remove bookmark&#39;\n        },\n        off: {\n          content: &#39;bookmark_border&#39;,\n          label: &#39;Add bookmark&#39;\n        }\n      }\n    };\n  }\n};</code></pre>\n<pre><code class="language-css">.demo-card {\n  width: 350px;\n  margin: 48px;\n}\n\n.demo-card--photo {\n  width: 200px;\n}\n\n.demo-card__media {\n  background-image: url(&#39;../images/1-1.jpg&#39;);\n}\n\n.demo-card__media-content--with-title {\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n}\n\n.demo-card__media-title {\n  padding: 8px 16px;\n  background-image: linear-gradient(\n    to bottom,\n    rgba(0, 0, 0, 0) 0%,\n    rgba(0, 0, 0, 0.5) 100%\n  );\n  color: white;\n}</code></pre>\n'},Fd0s:function(t,e){t.exports='<pre><code class="language-html">&lt;ui-button raised @click=&quot;$toast(&#39;gg&#39;)&quot;&gt;Show Toast&lt;/ui-button&gt;</code></pre>\n'},FlZy:function(t,e){t.exports='<pre><code class="language-html">&lt;ui-chip-set choice v-model=&quot;selectedIndex&quot;&gt;\n  &lt;ui-chip v-for=&quot;(item, index) in choiceList&quot;\n    :key=&quot;index&quot;\n    class=&quot;demo-chip&quot;&gt;\n    &lt;ui-chip-text&gt;{{ item }}&lt;/ui-chip-text&gt;\n  &lt;/ui-chip&gt;\n&lt;/ui-chip-set&gt;</code></pre>\n<pre><code class="language-js">export default {\n  data() {\n    return {\n      selectedIndex: 2,\n      choiceList: [&#39;Extra Small&#39;, &#39;Small&#39;, &#39;Medium&#39;, &#39;Large&#39;, &#39;Extra Large&#39;]\n    };\n  }\n};</code></pre>\n'},Gna0:function(t,e){t.exports='<pre><code class="language-html">&lt;ui-button raised @click=&quot;show&quot;&gt;Confrim&lt;/ui-button&gt;</code></pre>\n<pre><code class="language-js">export default {\n  methods: {\n    show() {\n      this.$confirm({\n        message: &#39;Do you like BalmJS?&#39;,\n        acceptText: &#39;Cool&#39;,\n        cancelText: &#39;Good&#39;\n      }).then(result =&gt; {\n        if (result) {\n          this.$alert(&#39;Thanks :)&#39;);\n        }\n      });\n    }\n  }\n};</code></pre>\n'},GuLE:function(t,e){t.exports='<pre><code class="language-html">&lt;ui-button raised @click=&quot;$balmUI.onShow(&#39;open&#39;)&quot;&gt;Open dialog&lt;/ui-button&gt;\n\n&lt;ui-dialog v-model=&quot;open&quot;&gt;\n  &lt;ui-dialog-body&gt;\n    Dialog content\n  &lt;/ui-dialog-body&gt;\n  &lt;ui-dialog-footer&gt;\n    &lt;ui-button @click=&quot;$balmUI.onHide(&#39;open&#39;)&quot;&gt;Close dialog&lt;/ui-button&gt;\n  &lt;/ui-dialog-footer&gt;\n&lt;/ui-dialog&gt;</code></pre>\n<pre><code class="language-js">export default {\n  data() {\n    return {\n      open: false\n    };\n  }\n};</code></pre>\n'},H0rg:function(t,e){t.exports='<p>Default Usage</p>\n<pre><code class="language-js">import Vue from &#39;vue&#39;;\nimport BalmUIPlus from &#39;balm-ui/dist/balm-ui-plus&#39;;\n\nVue.use(BalmUIPlus, {\n  // Optional. Overwrite `$confirm` options.\n  confirm: {\n    // some options\n  }\n});</code></pre>\n<p>Standalone Usage</p>\n<pre><code class="language-js">import Vue from &#39;vue&#39;;\nimport confirm from &#39;balm-ui/plugins/confirm&#39;;\n\n// (Recommended) Splitting CSS out from the main application, see BalmUI advanced usage.\nimport &#39;balm-ui/components/core.css&#39;;\nimport &#39;balm-ui/components/button.css&#39;;\nimport &#39;balm-ui/components/dialog.css&#39;;\nimport &#39;balm-ui/plugins/confirm.css&#39;;\n\n// Optional. Overwrite `$confirm` options.\nVue.use(confirm, {\n  // some options\n});</code></pre>\n'},HJdF:function(t,e){t.exports='<p>Default Usage</p>\n<pre><code class="language-js">import Vue from &#39;vue&#39;;\nimport BalmUIPlus from &#39;balm-ui/dist/balm-ui-plus&#39;;\n\nVue.use(BalmUIPlus, {\n  // Optional. Overwrite `&lt;ui-autocomplete&gt;` props.\n  UiAutocomplete: {\n    // some props\n  }\n});</code></pre>\n<p>Standalone Usage</p>\n<pre><code class="language-js">import Vue from &#39;vue&#39;;\nimport UiAutocomplete from &#39;balm-ui/components/autocomplete&#39;;\n\n// (Recommended) Splitting CSS out from the main application, see BalmUI advanced usage.\nimport &#39;balm-ui/components/core.css&#39;;\nimport &#39;balm-ui/components/textfield.css&#39;;\nimport &#39;balm-ui/components/autocomplete.css&#39;;\n\n// Optional. Overwrite `&lt;ui-autocomplete&gt;` props.\nVue.use(UiAutocomplete, {\n  // some props\n});</code></pre>\n'},HRpM:function(t,e,n){"use strict";e.a={data:function(){return{demo:{name:"",count:0},code:[]}},methods:{showCode:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;if(this.demo={name:t,count:e},this.demo.name)for(var o=0;o<=this.demo.count;o++){var l=n("ddae")("./"+this.demo.name+"/demo"+o+".md");this.code.push(l)}else console.warn("The snippet name is required. You can run `showCode(snippetName, snippetCount)` for it.")}}}},Hpe4:function(t,e){t.exports='<pre><code class="language-html">&lt;ui-tab-bar class=&quot;custom-demo&quot; v-model=&quot;active&quot;&gt;\n  &lt;ui-tab v-for=&quot;(tab, index) in tabs&quot; :key=&quot;index&quot;\n    class=&quot;demo-tab custom-tab&quot;\n    type=&quot;both&quot;\n    :icon=&quot;tab.icon&quot;\n    stacked\n    contentIndicator&gt;\n    {{ tab.text }}\n    &lt;template slot=&quot;indicator&quot;&gt;\n      &lt;ui-tab-indicator class=&quot;custom-tab-indicator&quot;&gt;&lt;/ui-tab-indicator&gt;\n    &lt;/template&gt;\n  &lt;/ui-tab&gt;\n&lt;/ui-tab-bar&gt;</code></pre>\n<pre><code class="language-css">/* Sass code */\n.demo-tab {\n  flex: 0 1 auto;\n}\n\n.custom-tab {\n  @include mdc-tab-text-label-color($material-color-blue-300);\n  @include mdc-tab-icon-color($material-color-orange-300);\n  .custom-tab-indicator {\n    @include mdc-tab-indicator-underline-color($material-color-pink-a700);\n    @include mdc-tab-indicator-underline-height(5px);\n    @include mdc-tab-indicator-underline-top-corner-radius(5px);\n  }\n  .mdc-tab__ripple {\n    @include mdc-states($material-color-pink-100);\n  }\n  &amp;.mdc-tab--active {\n    @include mdc-tab-text-label-color($material-color-blue-900);\n    @include mdc-tab-icon-color($material-color-orange-900);\n  }\n}</code></pre>\n'},"Hs+w":function(t,e){t.exports='<pre><code class="language-html">&lt;ui-fab cssOnly icon=&quot;favorite_border&quot;&gt;&lt;/ui-fab&gt;\n&lt;ui-fab cssOnly icon=&quot;favorite_border&quot; mini&gt;&lt;/ui-fab&gt;\n\n&lt;ui-fab cssOnly class=&quot;lightGreen800Fab&quot; icon=&quot;favorite_border&quot;&gt;&lt;/ui-fab&gt;\n&lt;ui-fab cssOnly class=&quot;lightGreen800Fab&quot; icon=&quot;favorite_border&quot; mini&gt;&lt;/ui-fab&gt;</code></pre>\n<pre><code class="language-css">/* Sass code */\n.mdc-fab.lightGreen800Fab {\n  @include mdc-fab-accessible($material-color-light-green-800);\n}</code></pre>\n'},I9yt:function(t,e){t.exports='<pre><code class="language-html">&lt;h6 :class=&quot;$tt(&#39;headline6&#39;)&quot;&gt;Text Label Width-Matching Indicator&lt;/h6&gt;\n&lt;div class=&quot;example&quot;&gt;\n  &lt;ui-tab-bar v-model=&quot;active&quot;&gt;\n    &lt;ui-tab v-for=&quot;(tab, index) in tabs&quot; :key=&quot;index&quot; contentIndicator&gt;\n      {{ tab.text }}\n    &lt;/ui-tab&gt;\n  &lt;/ui-tab-bar&gt;\n&lt;/div&gt;\n\n&lt;h6 :class=&quot;$tt(&#39;headline6&#39;)&quot;&gt;Text Label with Icon Indicator&lt;/h6&gt;\n&lt;div class=&quot;example&quot;&gt;\n  &lt;ui-tab-bar v-model=&quot;active&quot;&gt;\n    &lt;ui-tab v-for=&quot;(tab, index) in tabs&quot; :key=&quot;index&quot;&gt;\n      {{ tab.text }}\n      &lt;template slot=&quot;indicator&quot;&gt;\n        &lt;ui-tab-indicator type=&quot;icon&quot;&gt;{{ tab.indicator }}&lt;/ui-tab-indicator&gt;\n      &lt;/template&gt;\n    &lt;/ui-tab&gt;\n  &lt;/ui-tab-bar&gt;\n&lt;/div&gt;</code></pre>\n<pre><code class="language-js">export default {\n  data() {\n    return {\n      active: 0,\n      tabs: [\n        {\n          text: &#39;Favorites&#39;,\n          icon: &#39;favorite&#39;,\n          indicator: &#39;crop_square&#39;\n        },\n        {\n          text: &#39;Recents&#39;,\n          icon: &#39;phone&#39;,\n          indicator: &#39;panorama_fish_eye&#39;\n        },\n        {\n          text: &#39;Nearby&#39;,\n          icon: &#39;near_me&#39;,\n          indicator: &#39;change_history&#39;\n        }\n      ]\n    };\n  }\n};</code></pre>\n'},Js8M:function(t,e){t.exports='<pre><code class="language-html">&lt;ui-fab icon=&quot;favorite_border&quot;&gt;&lt;/ui-fab&gt;\n&lt;ui-fab icon=&quot;favorite_border&quot; mini&gt;&lt;/ui-fab&gt;\n\n&lt;ui-fab&gt;\n  &lt;template slot-scope=&quot;{ className }&quot;&gt;\n    &lt;ui-logo :class=&quot;className.icon&quot;&gt;&lt;/ui-logo&gt;\n  &lt;/template&gt;\n&lt;/ui-fab&gt;\n&lt;ui-fab mini&gt;\n  &lt;template slot-scope=&quot;{ className }&quot;&gt;\n    &lt;ui-logo :class=&quot;className.icon&quot;&gt;&lt;/ui-logo&gt;\n  &lt;/template&gt;\n&lt;/ui-fab&gt;\n\n&lt;ui-fab class=&quot;lightGreen800Fab&quot; icon=&quot;favorite_border&quot;&gt;&lt;/ui-fab&gt;\n&lt;ui-fab class=&quot;lightGreen800Fab&quot; icon=&quot;favorite_border&quot; mini&gt;&lt;/ui-fab&gt;</code></pre>\n<pre><code class="language-css">/* Sass code */\n.mdc-fab.lightGreen800Fab {\n  @include mdc-fab-accessible($material-color-light-green-800);\n}</code></pre>\n'},KMbe:function(t,e){t.exports='<pre><code class="language-html">&lt;ui-persistent-drawer menuSelector=&quot;#demo-menu&quot;&gt;\n  &lt;ui-drawer-toolbar-spacer&gt;&lt;/ui-drawer-toolbar-spacer&gt;\n  &lt;ui-drawer-content&gt;\n    &lt;ui-list-group&gt;\n      &lt;ui-list-nav&gt;\n        &lt;ui-item-link v-for=&quot;(item, index) in menu1&quot; :key=&quot;index&quot; :firstIcon=&quot;item.icon&quot;&gt;\n          {{ item.name }}\n        &lt;/ui-item-link&gt;\n      &lt;/ui-list-nav&gt;\n      &lt;ui-list-divider&gt;&lt;/ui-list-divider&gt;\n      &lt;ui-list-nav&gt;\n        &lt;ui-item-link v-for=&quot;(item, index) in menu2&quot; :key=&quot;index&quot; :firstIcon=&quot;item.icon&quot;&gt;\n          {{ item.name }}\n        &lt;/ui-item-link&gt;\n      &lt;/ui-list-nav&gt;\n    &lt;/ui-list-group&gt;\n  &lt;/ui-drawer-content&gt;\n&lt;/ui-persistent-drawer&gt;\n\n&lt;div class=&quot;demo-content&quot;&gt;\n  &lt;ui-top-app-bar contentSelector=&quot;.demo-main&quot; menuId=&quot;demo-menu&quot; :class=&quot;$shadow(4)&quot;&gt;\n    Persistent Drawer\n  &lt;/ui-top-app-bar&gt;\n\n  &lt;main class=&quot;demo-main&quot;&gt;\n    &lt;h1 :class=&quot;$tt(&#39;headline4&#39;)&quot;&gt;Persistent Drawer&lt;/h1&gt;\n    &lt;p :class=&quot;$tt(&#39;body1&#39;)&quot;&gt;Click the menu icon above to open and close the drawer.&lt;/p&gt;\n  &lt;/main&gt;\n&lt;/div&gt;</code></pre>\n'},LCqv:function(t,e){t.exports='<pre><code class="language-html">&lt;ui-button @click=&quot;$balmUI.onChange(&#39;message&#39;, &#39;Hello BalmUI&#39;)&quot;&gt;Show message&lt;/ui-button&gt;\n&lt;ui-button @click=&quot;$balmUI.onChange(&#39;message&#39;, &#39;&#39;)&quot;&gt;Clear&lt;/ui-button&gt;\n\n&lt;p&gt;{{ message }}&lt;/p&gt;</code></pre>\n<pre><code class="language-js">export default {\n  data() {\n    return {\n      message: &#39;No message&#39;\n    };\n  }\n};</code></pre>\n'},LXzF:function(t,e){t.exports='<pre><code class="language-html">&lt;ui-button unelevated&gt;Baseline&lt;/ui-button&gt;\n&lt;ui-button unelevated dense&gt;Dense&lt;/ui-button&gt;\n&lt;ui-button unelevated class=&quot;secondary-filled-button&quot;&gt;Secondary&lt;/ui-button&gt;\n&lt;ui-button unelevated icon=&quot;favorite&quot;&gt;Icon&lt;/ui-button&gt;\n&lt;ui-button unelevated&gt;\n  &lt;template slot-scope=&quot;{ className }&quot;&gt;\n    &lt;!-- Custom SVG --&gt;\n    &lt;ui-logo :class=&quot;className.icon&quot;&gt;&lt;/ui-logo&gt;\n    SVG Icon\n  &lt;/template&gt;\n&lt;/ui-button&gt;\n&lt;ui-link unelevated&gt;Link&lt;/ui-link&gt;</code></pre>\n<pre><code class="language-css">/* Sass code */\n.mdc-button.secondary-filled-button {\n  @include mdc-button-filled-accessible($mdc-theme-secondary);\n}</code></pre>\n'},LxQT:function(t,e){t.exports='<p>Default Usage</p>\n<pre><code class="language-js">import Vue from &#39;vue&#39;;\nimport BalmUI from &#39;balm-ui&#39;;\n\nVue.use(BalmUI, {\n  // Optional. Overwrite `&lt;ui-button&gt;` and `&lt;ui-link&gt;` props.\n  UiButton: {\n    // some props\n  }\n});</code></pre>\n<p>Standalone Usage</p>\n<pre><code class="language-js">import Vue from &#39;vue&#39;;\nimport UiButtonComponents from &#39;balm-ui/components/button&#39;;\n\n// (Recommended) Splitting CSS out from the main application, see BalmUI advanced usage.\nimport &#39;balm-ui/components/core.css&#39;;\nimport &#39;balm-ui/components/button.css&#39;;\nimport &#39;balm-ui/components/icon.css&#39;; // Optional.\n\nVue.use(UiButtonComponents, {\n  // Optional. Overwrite `&lt;ui-button&gt;` and `&lt;ui-link&gt;` props.\n  UiButton: {\n    // some props\n  }\n});</code></pre>\n'},MW7G:function(t,e){t.exports='<p>Default Usage</p>\n<pre><code class="language-js">import Vue from &#39;vue&#39;;\nimport BalmUI from &#39;balm-ui&#39;;\n\nVue.use(BalmUI, {\n  // Optional. Overwrite `&lt;ui-list&gt;` and `&lt;ui-list-nav&gt;` props.\n  UiList: {\n    // some props\n  },\n  // Optional. Overwrite `&lt;ui-list-divider&gt;` and `&lt;ui-item-divider&gt;` props.\n  UiListDivider: {\n    // some props\n  }\n});</code></pre>\n<p>Standalone Usage</p>\n<pre><code class="language-js">import Vue from &#39;vue&#39;;\nimport UiListComponents from &#39;balm-ui/components/list&#39;;\n\n// (Recommended) Splitting CSS out from the main application, see BalmUI advanced usage.\nimport &#39;balm-ui/components/core.css&#39;;\nimport &#39;balm-ui/components/list.css&#39;;\nimport &#39;balm-ui/components/icon.css&#39;; // Optional.\n\nVue.use(UiListComponents, {\n  // Optional. Overwrite `&lt;ui-list&gt;` and `&lt;ui-list-nav&gt;` props.\n  UiList: {\n    // some props\n  },\n  // Optional. Overwrite `&lt;ui-list-divider&gt;` and `&lt;ui-item-divider&gt;` props.\n  UiListDivider: {\n    // some props\n  }\n});</code></pre>\n'},NDOf:function(t,e){t.exports='<pre><code class="language-html">&lt;ui-textfield box leadingIcon&gt;\n  Your name\n  &lt;template slot=&quot;before&quot;&gt;\n    &lt;ui-textfield-icon&gt;event&lt;/ui-textfield-icon&gt;\n  &lt;/template&gt;\n&lt;/ui-textfield&gt;\n&lt;ui-textfield box trailingIcon&gt;\n  Your name\n  &lt;template slot=&quot;after&quot;&gt;\n    &lt;ui-textfield-icon&gt;delete&lt;/ui-textfield-icon&gt;\n  &lt;/template&gt;\n&lt;/ui-textfield&gt;\n\n&lt;ui-textfield outlined leadingIcon&gt;\n  &lt;template slot=&quot;before&quot;&gt;\n    &lt;span class=&quot;mdc-text-field__custom-icon&quot;&gt;\n      &lt;i class=&quot;fa fa-smile-o fa-lg&quot;&gt;&lt;/i&gt;\n    &lt;/span&gt;\n  &lt;/template&gt;\n  Your other name\n&lt;/ui-textfield&gt;\n&lt;ui-textfield outlined trailingIcon&gt;\n  Your other name\n  &lt;template slot=&quot;after&quot;&gt;\n    &lt;span class=&quot;mdc-text-field__custom-icon&quot;&gt;\n      &lt;i class=&quot;fa fa-close fa-lg&quot;&gt;&lt;/i&gt;\n    &lt;/span&gt;\n  &lt;/template&gt;\n&lt;/ui-textfield&gt;</code></pre>\n<pre><code class="language-css">/* Sass code for custom icon */\n.mdc-text-field__custom-icon {\n  position: absolute;\n  top: 16px;\n}\n.mdc-text-field--with-leading-icon {\n  .mdc-text-field__custom-icon {\n    left: 15px;\n  }\n}\n.mdc-text-field--with-trailing-icon {\n  .mdc-text-field__custom-icon {\n    right: 15px;\n  }\n}</code></pre>\n'},NEwY:function(t,e){t.exports='<pre><code class="language-html">&lt;ui-button @click=&quot;showMessage&quot;&gt;Show message&lt;/ui-button&gt;\n&lt;ui-button @click=&quot;clearMessage&quot;&gt;Clear&lt;/ui-button&gt;\n\n&lt;p&gt;{{ message }}&lt;/p&gt;</code></pre>\n<pre><code class="language-js">export default {\n  data() {\n    return {\n      message: &#39;No message&#39;\n    };\n  },\n  methods: {\n    showMessage() {\n      this.message = &#39;Hello BalmUI&#39;;\n    },\n    clearMessage() {\n      this.message = &#39;&#39;;\n    }\n  }\n};</code></pre>\n'},"NGw+":function(t,e){t.exports='<p>Default Usage</p>\n<pre><code class="language-js">import Vue from &#39;vue&#39;;\nimport BalmUI from &#39;balm-ui&#39;;\n\nVue.use(BalmUI, {\n  // Optional. Overwrite `&lt;ui-image-list&gt;` props.\n  UiImageList: {\n    // some props\n  },\n  // Optional. Overwrite `&lt;ui-image-item&gt;` props.\n  UiImageItem: {\n    // some props\n  }\n});</code></pre>\n<p>Standalone Usage</p>\n<pre><code class="language-js">import Vue from &#39;vue&#39;;\nimport UiImageListComponents from &#39;balm-ui/components/image-list&#39;;\n\n// (Recommended) Splitting CSS out from the main application, see BalmUI advanced usage.\nimport &#39;balm-ui/components/core.css&#39;;\nimport &#39;balm-ui/components/image-list.css&#39;;\n\nVue.use(UiImageListComponents, {\n  // Optional. Overwrite `&lt;ui-image-list&gt;` props.\n  UiImageList: {\n    // some props\n  },\n  // Optional. Overwrite `&lt;ui-image-item&gt;` props.\n  UiImageItem: {\n    // some props\n  }\n});</code></pre>\n'},NQQ6:function(t,e){t.exports='<p>Default Usage</p>\n<pre><code class="language-js">import Vue from &#39;vue&#39;;\nimport BalmUIPlus from &#39;balm-ui/dist/balm-ui-plus&#39;;\n\nVue.use(BalmUIPlus, {\n  // Optional. Overwrite `$alert` options.\n  alert: {\n    // some options\n  }\n});</code></pre>\n<p>Standalone Usage</p>\n<pre><code class="language-js">import Vue from &#39;vue&#39;;\nimport alert from &#39;balm-ui/plugins/alert&#39;;\n\n// (Recommended) Splitting CSS out from the main application, see BalmUI advanced usage.\nimport &#39;balm-ui/components/core.css&#39;;\nimport &#39;balm-ui/components/button.css&#39;;\nimport &#39;balm-ui/components/dialog.css&#39;;\nimport &#39;balm-ui/plugins/alert.css&#39;;\n\n// Optional. Overwrite `$alert` options.\nVue.use(alert, {\n  // some options\n});</code></pre>\n'},Ngmu:function(t,e){t.exports='<pre><code class="language-html">&lt;ui-button raised @click=&quot;openDialog&quot;&gt;Open dialog&lt;/ui-button&gt;\n\n&lt;ui-dialog v-model=&quot;open&quot;&gt;\n  &lt;ui-dialog-body&gt;\n    Dialog content\n  &lt;/ui-dialog-body&gt;\n  &lt;ui-dialog-footer&gt;\n    &lt;ui-button @click=&quot;closeDialog&quot;&gt;Close dialog&lt;/ui-button&gt;\n  &lt;/ui-dialog-footer&gt;\n&lt;/ui-dialog&gt;</code></pre>\n<pre><code class="language-js">export default {\n  data() {\n    return {\n      open: false\n    };\n  },\n  methods: {\n    openDialog() {\n      this.open = true;\n    },\n    closeDialog() {\n      this.open = false;\n    }\n  }\n};</code></pre>\n'},"Np/8":function(t,e){t.exports='<pre><code class="language-html">&lt;div class=&quot;demo-theme-color-section_row&quot;&gt;\n  &lt;fieldset class=&quot;demo-fieldset--color&quot;&gt;\n    &lt;legend :class=&quot;$tt(&#39;subtitle1&#39;)&quot;&gt;Text on background&lt;/legend&gt;\n\n    &lt;div class=&quot;demo-theme-color-group&quot;&gt;\n      &lt;div :class=&quot;[&#39;demo-theme-text-row&#39;, $themeColor(&#39;background&#39;), $tt(&#39;body2&#39;)]&quot;&gt;\n        &lt;span :class=&quot;[&#39;demo-theme-text-style&#39;, $textColor(&#39;primary&#39;)]&quot;&gt;Primary&lt;/span&gt;\n        &lt;span :class=&quot;[&#39;demo-theme-text-style&#39;, $textColor(&#39;secondary&#39;)]&quot;&gt;Secondary&lt;/span&gt;\n        &lt;span :class=&quot;[&#39;demo-theme-text-style&#39;, $textColor(&#39;hint&#39;)]&quot;&gt;Hint&lt;/span&gt;\n        &lt;span :class=&quot;[&#39;demo-theme-text-style&#39;, $textColor(&#39;disabled&#39;)]&quot;&gt;Disabled&lt;/span&gt;\n        &lt;span :class=&quot;[&#39;demo-theme-text-style&#39;, $textColor(&#39;icon&#39;), &#39;material-icons&#39;]&quot;&gt;favorite&lt;/span&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n  &lt;/fieldset&gt;\n&lt;/div&gt;</code></pre>\n'},Nu9s:function(t,e){t.exports='<pre><code class="language-html">&lt;ui-autocomplete\n  v-model=&quot;keywords&quot;\n  :source=&quot;source&quot;\n  placeholder=&quot;Try to type&quot;&gt;\n&lt;/ui-autocomplete&gt;</code></pre>\n<pre><code class="language-js">export default {\n  data() {\n    return {\n      keywords: &#39;&#39;,\n      source: [\n        &#39;ActionScript&#39;,\n        &#39;AppleScript&#39;,\n        &#39;Asp&#39;,\n        &#39;BASIC&#39;,\n        &#39;C&#39;,\n        &#39;C++&#39;,\n        &#39;Clojure&#39;,\n        &#39;COBOL&#39;,\n        &#39;ColdFusion&#39;,\n        &#39;Erlang&#39;,\n        &#39;Fortran&#39;,\n        &#39;Groovy&#39;,\n        &#39;Haskell&#39;,\n        &#39;Java&#39;,\n        &#39;JavaScript&#39;,\n        &#39;Lisp&#39;,\n        &#39;Perl&#39;,\n        &#39;PHP&#39;,\n        &#39;Python&#39;,\n        &#39;Ruby&#39;,\n        &#39;Scala&#39;,\n        &#39;Scheme&#39;\n      ]\n    };\n  }\n};</code></pre>\n'},ORrX:function(t,e){t.exports='<p>Default Usage</p>\n<pre><code class="language-js">import Vue from &#39;vue&#39;;\nimport BalmUI from &#39;balm-ui&#39;;\n\nVue.use(BalmUI, {\n  // Optional. Overwrite `&lt;ui-icon-button&gt;` and `&lt;ui-icon-link&gt;` props.\n  UiIconButton: {\n    // some props\n  }\n});</code></pre>\n<p>Standalone Usage</p>\n<pre><code class="language-js">import Vue from &#39;vue&#39;;\nimport UiIconButtonComponents from &#39;balm-ui/components/icon-button&#39;;\n\n// (Recommended) Splitting CSS out from the main application, see BalmUI advanced usage.\nimport &#39;balm-ui/components/core.css&#39;;\nimport &#39;balm-ui/components/icon-button.css&#39;;\nimport &#39;balm-ui/components/icon.css&#39;;\n\nVue.use(UiIconButtonComponents, {\n  // Optional. Overwrite `&lt;ui-icon-button&gt;` and `&lt;ui-icon-link&gt;` props.\n  UiIconButton: {\n    // some props\n  }\n});</code></pre>\n'},P8Fu:function(t,e){t.exports='<pre><code class="language-html">&lt;div v-shadow.transition=&quot;[2, 8]&quot;&gt;\n  &lt;p&gt;Hover over or tap me for a transition&lt;/p&gt;\n&lt;/div&gt;</code></pre>\n'},PGPd:function(t,e){t.exports=""},Po75:function(t,e){t.exports='<pre><code class="language-html">&lt;section :dir=&quot;controls.rtl ? &#39;rtl&#39; : null&quot;&gt;\n  &lt;ui-textfield id=&quot;full-func-text-field&quot;\n    v-model=&quot;value&quot;\n    :disabled=&quot;controls.disabled&quot;\n    :dense=&quot;controls.dense&quot;\n    :required=&quot;controls.required&quot;\n    :class=&quot;{&#39;demo-text-field-custom-colors&#39;: controls.customColor}&quot;\n    helptextId=&quot;my-text-field-helper-text&quot;&gt;\n    Email Address\n  &lt;/ui-textfield&gt;\n  &lt;ui-textfield-helptext v-if=&quot;controls.helperText&quot;\n    id=&quot;my-text-field-helper-text&quot;\n    :visible=&quot;controls.isVisible&quot;\n    :validMsg=&quot;controls.isValidMsg&quot;&gt;\n    Helper Text (possibly validation message)\n  &lt;/ui-textfield-helptext&gt;\n&lt;/section&gt;</code></pre>\n<pre><code class="language-js">export default {\n  data() {\n    return {\n      value: &#39;&#39;,\n      controls: {\n        disabled: false,\n        rtl: false,\n        dense: false,\n        required: false,\n        customColor: false,\n        helperText: false,\n        isVisible: false,\n        isValidMsg: false\n      }\n    };\n  }\n};</code></pre>\n'},PvR7:function(t,e){t.exports='<pre><code class="language-html">&lt;ui-grid class=&quot;demo-grid max-width&quot;&gt;\n  &lt;ui-grid-cell class=&quot;demo-cell&quot; colspan=&quot;4&quot;&gt;&lt;/ui-grid-cell&gt;\n  &lt;ui-grid-cell class=&quot;demo-cell&quot; colspan=&quot;4&quot;&gt;&lt;/ui-grid-cell&gt;\n  &lt;ui-grid-cell class=&quot;demo-cell&quot; colspan=&quot;4&quot;&gt;&lt;/ui-grid-cell&gt;\n&lt;/ui-grid&gt;</code></pre>\n<pre><code class="language-css">.demo-grid.max-width {\n  max-width: 1280px;\n}</code></pre>\n'},Q1zD:function(t,e){t.exports='<pre><code class="language-html">&lt;ui-textfield type=&quot;textarea&quot; rows=&quot;8&quot; cols=&quot;40&quot;&gt;\n  Textarea Label\n&lt;/ui-textfield&gt;</code></pre>\n'},Q9WI:function(t,e){t.exports='<pre><code class="language-html">&lt;section&gt;\n  &lt;h3&gt;Metadata&lt;/h3&gt;\n  &lt;ui-list class=&quot;demo-list&quot;&gt;\n    &lt;ui-item v-for=&quot;i in 3&quot;\n      :key=&quot;i&quot;\n      :lastText=&quot;`$${i}0.00`&quot;&gt;\n      Single-line item\n    &lt;/ui-item&gt;\n  &lt;/ui-list&gt;\n&lt;/section&gt;\n\n&lt;section&gt;\n  &lt;h3&gt;Avatar + Metadata&lt;/h3&gt;\n  &lt;ui-list avatar class=&quot;demo-list demo-list--with-avatars demo-list--icon-placeholders&quot;&gt;\n    &lt;ui-item v-for=&quot;i in 3&quot;\n      :key=&quot;i&quot;\n      firstPlaceholder\n      :lastText=&quot;`$${i}0.00`&quot;&gt;\n      Single-line item\n    &lt;/ui-item&gt;\n  &lt;/ui-list&gt;\n&lt;/section&gt;</code></pre>\n'},QLg9:function(t,e){t.exports='<p>Default Usage</p>\n<pre><code class="language-js">import Vue from &#39;vue&#39;;\nimport BalmUI from &#39;balm-ui&#39;;\n\nVue.use(BalmUI, {\n  // Optional. Overwrite `&lt;ui-tabs&gt;` props.\n  UiTabs: {\n    // some props\n  }\n});</code></pre>\n<p>Standalone Usage</p>\n<pre><code class="language-js">import Vue from &#39;vue&#39;;\nimport UiTabsComponents from &#39;balm-ui/components/tabs&#39;;\n\n// (Recommended) Splitting CSS out from the main application, see BalmUI advanced usage.\nimport &#39;balm-ui/components/core.css&#39;;\nimport &#39;balm-ui/components/tabs.css&#39;;\nimport &#39;balm-ui/components/icon.css&#39;; // Optional.\n\nVue.use(UiTabsComponents, {\n  // Optional. Overwrite `&lt;ui-tabs&gt;` props.\n  UiTabs: {\n    // some props\n  }\n});</code></pre>\n'},QOSS:function(t,e){t.exports='<p>Default Usage</p>\n<pre><code class="language-js">import Vue from &#39;vue&#39;;\nimport BalmUI from &#39;balm-ui&#39;;\n\nVue.use(BalmUI);</code></pre>\n<p>Standalone Usage</p>\n<pre><code class="language-js">import Vue from &#39;vue&#39;;\nimport UiDrawerComponents from &#39;balm-ui/components/drawer&#39;;\n\n// (Recommended) Splitting CSS out from the main application, see BalmUI advanced usage.\nimport &#39;balm-ui/components/core.css&#39;;\nimport &#39;balm-ui/components/drawer.css&#39;;\n\nVue.use(UiDrawerComponents);</code></pre>\n'},Qm85:function(t,e){t.exports='<pre><code class="language-html">&lt;ui-grid class=&quot;demo-grid&quot;&gt;\n  &lt;ui-grid-cell class=&quot;demo-cell&quot; colspan=&quot;6&quot;&gt;6&lt;/ui-grid-cell&gt;\n  &lt;ui-grid-cell class=&quot;demo-cell&quot; colspan=&quot;4&quot;&gt;4&lt;/ui-grid-cell&gt;\n  &lt;ui-grid-cell class=&quot;demo-cell&quot; colspan=&quot;2&quot;&gt;2&lt;/ui-grid-cell&gt;\n&lt;/ui-grid&gt;</code></pre>\n'},QwAn:function(t,e){t.exports='<pre><code class="language-html">&lt;fieldset&gt;\n  &lt;legend&gt;Form Area&lt;/legend&gt;\n  &lt;p class=&quot;form-item&quot;&gt;\n    &lt;ui-textfield id=&quot;mobile&quot;\n      v-model=&quot;formData.mobile&quot;\n      helptextId=&quot;mobile-helper-text&quot;&gt;Mobile&lt;/ui-textfield&gt;\n    &lt;ui-textfield-helptext id=&quot;mobile-helper-text&quot; :visible=&quot;errorMsg.mobile&quot;&gt;\n      {{ errorMsg.mobile }}\n    &lt;/ui-textfield-helptext&gt;\n  &lt;/p&gt;\n  &lt;p class=&quot;form-item&quot;&gt;\n    &lt;ui-textfield type=&quot;password&quot;\n      id=&quot;password&quot;\n      v-model=&quot;formData.password&quot;\n      helptextId=&quot;password-helper-text&quot;&gt;Password&lt;/ui-textfield&gt;\n    &lt;ui-textfield-helptext id=&quot;password-helper-text&quot; :visible=&quot;errorMsg.password&quot;&gt;\n      {{ errorMsg.password }}\n    &lt;/ui-textfield-helptext&gt;\n  &lt;/p&gt;\n  &lt;p class=&quot;form-item&quot;&gt;\n    &lt;ui-textfield type=&quot;password&quot;\n      id=&quot;repassword&quot;\n      v-model=&quot;formData.repassword&quot;\n      helptextId=&quot;repassword-helper-text&quot;&gt;Repeat Password&lt;/ui-textfield&gt;\n    &lt;ui-textfield-helptext id=&quot;repassword-helper-text&quot; :visible=&quot;errorMsg.repassword&quot;&gt;\n      {{ errorMsg.repassword }}\n    &lt;/ui-textfield-helptext&gt;\n  &lt;/p&gt;\n  &lt;p class=&quot;form-actions&quot;&gt;\n    &lt;ui-button raised @click=&quot;submit&quot;&gt;Submit&lt;/ui-button&gt;\n  &lt;/p&gt;\n&lt;/fieldset&gt;</code></pre>\n<pre><code class="language-js">export default {\n  validations: {\n    mobile: {\n      label: &#39;Mobile&#39;,\n      validator: &#39;required, mobile&#39;\n    },\n    password: {\n      label: &#39;Password&#39;,\n      validator: &#39;required, password, minRule, maxRule&#39;,\n      minRule: {\n        validate(value) {\n          return value.trim().length &gt;= 6;\n        },\n        message: &#39;%s minLength &gt;= 6&#39;\n      },\n      maxRule: {\n        validate(value) {\n          return value.trim().length &lt;= 8;\n        },\n        message: &#39;%s maxLength &lt;= 8&#39;\n      }\n    },\n    repassword: {\n      label: &#39;Repeat Password&#39;,\n      validator: &#39;required, password, repasswordRule&#39;,\n      repasswordRule: {\n        validate(value, data) {\n          return value === data.password;\n        },\n        message: &#39;repassword !== password&#39;\n      }\n    }\n  },\n  data() {\n    return {\n      formData: {\n        mobile: &#39;&#39;,\n        password: &#39;&#39;,\n        repassword: &#39;&#39;\n      },\n      errorMsg: {}\n    };\n  },\n  methods: {\n    submit() {\n      let result = this.$validate(this.formData);\n      let { isValid, errorMsg } = result;\n      this.errorMsg = errorMsg;\n\n      console.log(result);\n\n      if (isValid) {\n        console.log(&#39;gg&#39;);\n      }\n    }\n  }\n};</code></pre>\n'},RXEe:function(t,e){t.exports='<pre><code class="language-html">&lt;ui-textfield type=&quot;password&quot;\n  id=&quot;pw&quot;\n  required\n  pattern=&quot;.{8,}&quot;\n  helptextId=&quot;pw-validation-msg&quot;\n  :attrs=&quot;{autocomplete: &#39;current-password&#39;}&quot;&gt;\n  Choose password\n&lt;/ui-textfield&gt;\n&lt;ui-textfield-helptext id=&quot;pw-validation-msg&quot;\n  visible\n  validMsg&gt;\n  Must be at least 8 characters long\n&lt;/ui-textfield-helptext&gt;</code></pre>\n'},Romc:function(t,e){t.exports='<pre><code class="language-html">&lt;ui-tab-bar v-model=&quot;active&quot;&gt;\n  &lt;ui-tab&gt;Tab One&lt;/ui-tab&gt;\n  &lt;ui-tab&gt;Tab Two&lt;/ui-tab&gt;\n  &lt;ui-tab&gt;Tab Three&lt;/ui-tab&gt;\n&lt;/ui-tab-bar&gt;\n\n&lt;ui-panels v-model=&quot;active&quot;&gt;\n  &lt;ui-panel&gt;Panel One&lt;/ui-panel&gt;\n  &lt;ui-panel&gt;Panel Two&lt;/ui-panel&gt;\n  &lt;ui-panel&gt;Panel Three&lt;/ui-panel&gt;\n&lt;/ui-panels&gt;</code></pre>\n'},RwWQ:function(t,e){t.exports='<p>Default Usage</p>\n<pre><code class="language-js">import Vue from &#39;vue&#39;;\nimport BalmUI from &#39;balm-ui&#39;;\n\nVue.use(BalmUI, {\n  // Optional. Overwrite `&lt;ui-top-app-bar&gt;` props.\n  UiTopAppBar: {\n    // some props\n  }\n});</code></pre>\n<p>Standalone Usage</p>\n<pre><code class="language-js">import Vue from &#39;vue&#39;;\nimport UiTopAppBar from &#39;balm-ui/components/top-app-bar&#39;;\n\n// (Recommended) Splitting CSS out from the main application, see BalmUI advanced usage.\nimport &#39;balm-ui/components/core.css&#39;;\nimport &#39;balm-ui/components/top-app-bar.css&#39;;\n\n// Optional. Overwrite `&lt;ui-top-app-bar&gt;` props.\nVue.use(UiTopAppBar, {\n  // some props\n});</code></pre>\n'},Sxxp:function(t,e){t.exports='<pre><code class="language-html">&lt;div&gt;\n  &lt;label&gt;Pick a Food Group:&lt;/label&gt;\n  &lt;ui-dropdown\n    v-model=&quot;selected.value&quot;\n    :selectedIndex=&quot;selected.index&quot;\n    :options=&quot;options&quot;\n    defaultLabel=&quot;All&quot;\n    :defaultValue=&quot;0&quot;\n    @selected=&quot;$balmUI.onChange(&#39;selected&#39;, $event)&quot;&gt;\n  &lt;/ui-dropdown&gt;\n\n  &lt;ui-button raised\n    @click=&quot;$balmUI.onChange(&#39;selected.index&#39;, 0)&quot;&gt;\n    Set Selected Index (0)\n  &lt;/ui-button&gt;\n  &lt;ui-button raised\n    @click=&quot;$balmUI.onChange(&#39;selected.value&#39;, &#39;meat&#39;)&quot;&gt;\n    Set Value to Meat\n  &lt;/ui-button&gt;\n&lt;/div&gt;</code></pre>\n'},U9VE:function(t,e){t.exports='<pre><code class="language-html">&lt;ui-grid class=&quot;demo-grid&quot; fixedColumnWidth&gt;\n  &lt;ui-grid-cell class=&quot;demo-cell&quot; colspan=&quot;1&quot;&gt;&lt;/ui-grid-cell&gt;\n  &lt;ui-grid-cell class=&quot;demo-cell&quot; colspan=&quot;1&quot;&gt;&lt;/ui-grid-cell&gt;\n  &lt;ui-grid-cell class=&quot;demo-cell&quot; colspan=&quot;1&quot;&gt;&lt;/ui-grid-cell&gt;\n&lt;/ui-grid&gt;</code></pre>\n'},V2US:function(t,e){t.exports='<pre><code class="language-html">&lt;ui-select\n  defaultLabel=&quot;Province&quot;\n  :options=&quot;provinces&quot;\n  v-model=&quot;formData.province&quot;\n  @change=&quot;onChangeProvince($event)&quot;&gt;&lt;/ui-select&gt;\n\n&lt;ui-select\n  defaultLabel=&quot;City&quot;\n  :options=&quot;cities&quot;\n  v-model=&quot;formData.city&quot;&gt;&lt;/ui-select&gt;</code></pre>\n<pre><code class="language-js">const PROVINCES = [\n  {\n    value: 1,\n    label: &#39;Beijing&#39;\n  },\n  {\n    value: 2,\n    label: &#39;Shanghai&#39;\n  },\n  {\n    value: 3,\n    label: &#39;Guangzhou&#39;\n  }\n];\n\nconst CITIES = [\n  [],\n  [\n    {\n      value: 11,\n      label: &#39;\u6d77\u5b9a&#39;\n    },\n    {\n      value: 12,\n      label: &#39;\u671d\u9633&#39;\n    }\n  ],\n  [\n    {\n      value: 21,\n      label: &#39;\u9ec4\u6d66&#39;\n    },\n    {\n      value: 22,\n      label: &#39;\u5f90\u6c47&#39;\n    }\n  ],\n  []\n];\n\nexport default {\n  data() {\n    return {\n      provinces: PROVINCES,\n      cities: [],\n      formData: {\n        province: &#39;&#39;,\n        city: &#39;&#39;\n      }\n    };\n  },\n  methods: {\n    onChangeProvince(value) {\n      this.formData.provinces = value;\n\n      let key = value || -1;\n      this.cities = key &gt; -1 ? CITIES[key] : [];\n      this.formData.city = this.cities.length ? this.cities[0].value : &#39;&#39;;\n    }\n  }\n};</code></pre>\n'},V3IR:function(t,e){t.exports='<pre><code class="language-html">&lt;div class=&quot;fab-motion-container&quot;&gt;\n  &lt;div class=&quot;fab-motion-container__view&quot;&gt;\n    &lt;p&gt;View one (with FAB)&lt;/p&gt;\n  &lt;/div&gt;\n  &lt;div class=&quot;fab-motion-container__view&quot; :class=&quot;{&#39;fab-motion-container__view--exited&#39;: !exited}&quot;&gt;\n    &lt;p&gt;View two (without FAB)&lt;/p&gt;\n    &lt;p&gt;&lt;button type=&quot;button&quot; id=&quot;enter-exit-back&quot;\n      :disabled=&quot;!exited&quot;\n      @click=&quot;$balmUI.onHide(&#39;exited&#39;)&quot;&gt;Go back&lt;/button&gt;&lt;/p&gt;\n  &lt;/div&gt;\n  &lt;ui-fab id=&quot;enter-exit-add&quot; class=&quot;demo-absolute-fab&quot; icon=&quot;add&quot;\n    :exited=&quot;exited&quot;\n    @click=&quot;$balmUI.onShow(&#39;exited&#39;)&quot;&gt;add&lt;/ui-fab&gt;\n&lt;/div&gt;</code></pre>\n<pre><code class="language-js">export default {\n  data() {\n    return {\n      exited: false\n    };\n  }\n};</code></pre>\n<pre><code class="language-css">.demo-absolute-fab {\n  position: absolute;\n  z-index: 1;\n  right: 1rem;\n  bottom: 1rem;\n}\n\n.fab-motion-container {\n  position: relative;\n  overflow: hidden;\n  width: 20rem;\n  height: 10rem;\n  margin: 1rem;\n  padding: 0 1rem;\n  border: 1px solid #ccc;\n}\n\n.fab-motion-container__view {\n  position: absolute;\n  box-sizing: border-box;\n  width: 100%;\n  height: 100%;\n  transition: transform 375ms cubic-bezier(0, 0, 0.2, 1);\n  background-color: #fff;\n  will-change: transform;\n}\n\n.fab-motion-container__view--exited {\n  transition-timing-function: cubic-bezier(0.4, 0, 1, 1);\n  transform: translateY(100%);\n}</code></pre>\n'},VpmM:function(t,e){t.exports='<pre><code class="language-html">&lt;ui-dropdown\n  defaultLabel=&quot;Province&quot;\n  :options=&quot;provinces&quot;\n  v-model=&quot;formData.province&quot;\n  @change=&quot;onChangeProvince($event)&quot;&gt;&lt;/ui-dropdown&gt;\n\n&lt;ui-dropdown\n  defaultLabel=&quot;City&quot;\n  :options=&quot;cities&quot;\n  v-model=&quot;formData.city&quot;&gt;&lt;/ui-dropdown&gt;</code></pre>\n<pre><code class="language-js">const PROVINCES = [\n  {\n    value: 1,\n    label: &#39;Beijing&#39;\n  },\n  {\n    value: 2,\n    label: &#39;Shanghai&#39;\n  },\n  {\n    value: 3,\n    label: &#39;Guangzhou&#39;\n  }\n];\n\nconst CITIES = [\n  [],\n  [\n    {\n      value: 11,\n      label: &#39;\u6d77\u5b9a&#39;\n    },\n    {\n      value: 12,\n      label: &#39;\u671d\u9633&#39;\n    }\n  ],\n  [\n    {\n      value: 21,\n      label: &#39;\u9ec4\u6d66&#39;\n    },\n    {\n      value: 22,\n      label: &#39;\u5f90\u6c47&#39;\n    }\n  ],\n  []\n];\n\nexport default {\n  data() {\n    return {\n      provinces: PROVINCES,\n      cities: [],\n      formData: {\n        province: &#39;&#39;,\n        city: &#39;&#39;\n      }\n    };\n  },\n  methods: {\n    onChangeProvince(value) {\n      this.formData.provinces = value;\n\n      let key = value || -1;\n      this.cities = key &gt; -1 ? CITIES[key] : [];\n      this.formData.city = this.cities.length ? this.cities[0].value : &#39;&#39;;\n    }\n  }\n};</code></pre>\n'},"W0l+":function(t,e){t.exports='<pre><code class="language-html">&lt;ui-image-list\n  :withTextProtection=&quot;labelsType === 2&quot;&gt;\n  &lt;ui-image-item v-for=&quot;i in 15&quot; :key=&quot;i&quot;\n    :src=&quot;require(`../../../images/photos/3x2/${i}.jpg`)&quot;&gt;\n    &lt;ui-image-label v-if=&quot;labelsType&quot;&gt;Text label&lt;/ui-image-label&gt;\n  &lt;/ui-image-item&gt;\n&lt;/ui-image-list&gt;</code></pre>\n<pre><code class="language-js">export default {\n  data() {\n    return {\n      labelsType: 1\n    };\n  }\n};</code></pre>\n'},WIne:function(t,e){t.exports='<pre><code class="language-html">&lt;ui-textfield box&gt;\n  Your Name\n&lt;/ui-textfield&gt;</code></pre>\n'},XXab:function(t,e){t.exports='<pre><code class="language-html">&lt;ui-button raised @click=&quot;$alert(&#39;Hello BalmJS&#39;)&quot;&gt;Alert1&lt;/ui-button&gt;</code></pre>\n'},XfPe:function(t,e){t.exports='<pre><code class="language-html">&lt;ui-card outlined class=&quot;demo-card&quot;&gt;\n  &lt;div :class=&quot;[$tt(&#39;subtitle2&#39;), &#39;demo-card-article-group-heading&#39;]&quot;&gt;Headlines&lt;/div&gt;\n  &lt;hr class=&quot;mdc-list-divider&quot;&gt;\n\n  &lt;template v-for=&quot;item in list&quot;&gt;\n    &lt;a class=&quot;demo-card-article&quot; v-ripple&gt;\n      &lt;h2 :class=&quot;[$tt(&#39;headline5&#39;), &#39;demo-card-article__title&#39;]&quot;&gt;{{ item.title }}&lt;/h2&gt;\n      &lt;p :class=&quot;[$tt(&#39;body2&#39;), &#39;demo-card-article__snippet&#39;]&quot;&gt;{{ item.content }}&lt;/p&gt;\n    &lt;/a&gt;\n    &lt;hr class=&quot;mdc-list-divider&quot;&gt;\n  &lt;/template&gt;\n\n  &lt;ui-card-actions fullBleed&gt;\n    &lt;ui-link actionButton class=&quot;demo-card-action&quot;&gt;\n      All Business Headlines\n      &lt;ui-icon&gt;arrow_forward&lt;/ui-icon&gt;\n    &lt;/ui-link&gt;\n  &lt;/ui-card-actions&gt;\n&lt;/ui-card&gt;</code></pre>\n<pre><code class="language-js">export default {\n  data() {\n    return {\n      list: [\n        {\n          title: &#39;Copper on the rise&#39;,\n          content:\n            &#39;Copper price soars amid global market optimism and increased demand.&#39;\n        },\n        {\n          title: &#39;U.S. tech startups rebound&#39;,\n          content:\n            &#39;Favorable business conditions have allowed startups to secure more fundraising deals compared to last year.&#39;\n        },\n        {\n          title: `Asia&#39;s clean energy ambitions`,\n          content:\n            &#39;China plans to invest billions of dollars for the development of over 300 clean energy projects in Southeast Asia.&#39;\n        }\n      ]\n    };\n  }\n};</code></pre>\n<pre><code class="language-css">/* Sass code */\n.demo-card {\n  width: 350px;\n  margin: 48px;\n}\n\n.demo-card-article-group-heading {\n  @include mdc-theme-prop(color, text-secondary-on-light);\n\n  padding: 8px 16px;\n}\n\n.demo-card-article {\n  padding: 16px;\n  text-decoration: none;\n  color: inherit;\n}\n\n.demo-card-article__title {\n  margin: 0 0 4px 0;\n}\n\n.demo-card-article__snippet {\n  @include mdc-theme-prop(color, text-secondary-on-light);\n\n  margin: 0;\n}</code></pre>\n'},XoHX:function(t,e){t.exports='<pre><code class="language-html">&lt;div class=&quot;demo--top-app-bar&quot; :dir=&quot;controls.rtl ? &#39;rtl&#39; : null&quot;&gt;\n  &lt;ui-top-app-bar\n    contentSelector=&quot;#content-main&quot;\n    navId=&quot;demo-menu&quot;\n    :actionItems=&quot;controls.noAction ? [] : items&quot;\n    :dense=&quot;controls.dense&quot;\n    :fixed=&quot;controls.fixed&quot;\n    :prominent=&quot;controls.prominent&quot;\n    :short=&quot;controls.short&quot;\n    :alwaysClosed=&quot;controls.alwaysCollapsed&quot;&gt;\n    San Francisco, CA\n  &lt;/ui-top-app-bar&gt;\n\n  &lt;ui-temporary-drawer menuSelector=&quot;#demo-menu&quot;&gt;\n    &lt;ui-drawer-header :innerClass=&quot;[$themeColor(&#39;on-primary&#39;), $themeColor(&#39;primary-bg&#39;)]&quot;&gt;\n      Header here\n    &lt;/ui-drawer-header&gt;\n    &lt;ui-drawer-content&gt;\n      &lt;ui-list-group&gt;\n        &lt;ui-list-nav&gt;\n          &lt;ui-item-link @click.native=&quot;() =&gt; { $router.back(); }&quot; firstIcon=&quot;arrow_back&quot;&gt;\n            Back\n          &lt;/ui-item-link&gt;\n          &lt;ui-item-link v-for=&quot;(item, index) in menu1&quot; :key=&quot;index&quot; :firstIcon=&quot;item.icon&quot;&gt;\n            {{ item.name }}\n          &lt;/ui-item-link&gt;\n        &lt;/ui-list-nav&gt;\n        &lt;ui-list-divider&gt;&lt;/ui-list-divider&gt;\n        &lt;ui-list-nav&gt;\n          &lt;ui-item-link v-for=&quot;(item, index) in menu2&quot; :key=&quot;index&quot; :firstIcon=&quot;item.icon&quot;&gt;\n            {{ item.name }}\n          &lt;/ui-item-link&gt;\n        &lt;/ui-list-nav&gt;\n      &lt;/ui-list-group&gt;\n    &lt;/ui-drawer-content&gt;\n  &lt;/ui-temporary-drawer&gt;\n\n  &lt;main class=&quot;demo-main&quot;&gt;\n    &lt;div id=&quot;content-main&quot;&gt;\n      &lt;p v-for=&quot;i in 12&quot; :key=&quot;i&quot; class=&quot;demo-paragraph&quot;&gt;\n        Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Vestibulum tortor quam, feugiat vitae, ultricies eget, tempor sit amet, ante. Donec eu libero sit amet quam egestas semper. Aenean ultricies mi vitae est. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Vestibulum tortor quam, feugiat vitae, ultricies eget, tempor sit amet, ante. Donec eu libero sit amet quam egestas semper. Aenean ultricies mi vitae est.\n      &lt;/p&gt;\n    &lt;/div&gt;\n  &lt;/main&gt;\n&lt;/div&gt;</code></pre>\n<pre><code class="language-js">export default {\n  data() {\n    return {\n      items: [\n        {\n          icon: &#39;file_download&#39;,\n          label: &#39;Download&#39;\n        }\n      ],\n      controls: {\n        rtl: false,\n        noAction: false,\n        dense: false,\n        fixed: false,\n        prominent: false,\n        short: false,\n        alwaysCollapsed: false\n      }\n    };\n  }\n};</code></pre>\n'},YnQO:function(t,e){t.exports='<p>Default Usage</p>\n<pre><code class="language-js">import Vue from &#39;vue&#39;;\nimport BalmUI from &#39;balm-ui&#39;;\n\nVue.use(BalmUI, {\n  // Optional. Overwrite `&lt;ui-icon&gt;` props.\n  UiIcon: {\n    // some props\n  }\n});</code></pre>\n<p>Standalone Usage</p>\n<pre><code class="language-js">import Vue from &#39;vue&#39;;\nimport UiIcon from &#39;balm-ui/components/icon&#39;;\n\n// (Recommended) Splitting CSS out from the main application, see BalmUI advanced usage.\nimport &#39;balm-ui/components/core.css&#39;;\nimport &#39;balm-ui/components/icon.css&#39;;\n\n// Optional. Overwrite `&lt;ui-icon&gt;` props.\nVue.use(UiIcon, {\n  // some props\n});</code></pre>\n'},"Z/7x":function(t,e){t.exports='<pre><code class="language-html">&lt;ui-autocomplete\n  v-model=&quot;keywords&quot;\n  :source=&quot;source&quot;\n  placeholder=&quot;Type &#39;a&#39; and &#39;b&#39;&quot;\n  delay=&quot;500&quot;\n  remote\n  autoFocus\n  @search=&quot;onSearch&quot;&gt;</code></pre>\n<pre><code class="language-js">export default {\n  data() {\n    return {\n      keywords: &#39;&#39;,\n      source: []\n    };\n  },\n  methods: {\n    async onSearch(keywords) {\n      let response = await this.$http.get(&#39;/api/search&#39;, {\n        params: {\n          text: keywords\n        }\n      });\n      let { data } = response;\n      // mock data\n      this.source = data[keywords] ? data[keywords] : [];\n    }\n  }\n};</code></pre>\n'},"ZHq+":function(t,e){t.exports='<pre><code class="language-html">&lt;figure class=&quot;linear-progress-demo&quot;&gt;\n  &lt;ui-linear-progress :progress=&quot;progress&quot;&gt;&lt;/ui-linear-progress&gt;\n  &lt;figcaption&gt;Determinate (Progress: {{progress }})&lt;/figcaption&gt;\n&lt;/figure&gt;\n\n&lt;figure class=&quot;linear-progress-demo&quot;&gt;\n  &lt;ui-linear-progress indeterminate&gt;&lt;/ui-linear-progress&gt;\n  &lt;figcaption&gt;Indeterminate&lt;/figcaption&gt;\n&lt;/figure&gt;\n\n&lt;figure class=&quot;linear-progress-demo&quot;&gt;\n  &lt;ui-linear-progress progress=&quot;0.5&quot; data-buffer=&quot;true&quot; buffer=&quot;0.75&quot;&gt;&lt;/ui-linear-progress&gt;\n  &lt;figcaption&gt;Buffer&lt;/figcaption&gt;\n&lt;/figure&gt;\n\n&lt;figure class=&quot;linear-progress-demo&quot;&gt;\n  &lt;ui-linear-progress reversed progress=&quot;0.5&quot;&gt;&lt;/ui-linear-progress&gt;\n  &lt;figcaption&gt;Reversed&lt;/figcaption&gt;\n&lt;/figure&gt;\n\n&lt;figure class=&quot;linear-progress-demo&quot;&gt;\n  &lt;ui-linear-progress indeterminate reversed&gt;&lt;/ui-linear-progress&gt;\n  &lt;figcaption&gt;Indeterminate Reversed&lt;/figcaption&gt;\n&lt;/figure&gt;\n\n&lt;figure class=&quot;linear-progress-demo&quot;&gt;\n  &lt;ui-linear-progress reversed progress=&quot;0.5&quot; data-buffer=&quot;true&quot; buffer=&quot;0.75&quot;&gt;&lt;/ui-linear-progress&gt;\n  &lt;figcaption&gt;Buffer Reversed&lt;/figcaption&gt;\n&lt;/figure&gt;\n\n&lt;figure class=&quot;linear-progress-demo&quot;&gt;\n  &lt;ui-linear-progress class=&quot;demo-linear-progress--custom&quot; progress=&quot;0.5&quot; data-buffer=&quot;true&quot; buffer=&quot;0.75&quot;&gt;&lt;/ui-linear-progress&gt;\n  &lt;figcaption&gt;Custom Colors with Buffer&lt;/figcaption&gt;\n&lt;/figure&gt;</code></pre>\n'},ZKNm:function(t,e){t.exports='<p>Default Usage</p>\n<pre><code class="language-js">import Vue from &#39;vue&#39;;\nimport BalmUI from &#39;balm-ui&#39;;\n\nVue.use(BalmUI, {\n  // Optional. Overwrite `&lt;ui-checkbox&gt;` props.\n  UiCheckbox: {\n    // some props\n  }\n});</code></pre>\n<p>Standalone Usage</p>\n<pre><code class="language-js">import Vue from &#39;vue&#39;;\nimport UiCheckbox from &#39;balm-ui/components/checkbox&#39;;\n\n// (Recommended) Splitting CSS out from the main application, see BalmUI advanced usage.\nimport &#39;balm-ui/components/core.css&#39;;\nimport &#39;balm-ui/components/checkbox.css&#39;;\n\n// Optional. Overwrite `&lt;ui-checkbox&gt;` props.\nVue.use(UiCheckbox, {\n  // some props\n});</code></pre>\n'},aCmL:function(t,e){t.exports='<pre><code class="language-html">&lt;ui-card class=&quot;demo-card demo-card--music&quot;&gt;\n  &lt;ui-card-content class=&quot;demo-card__primary-action&quot; v-ripple&gt;\n    &lt;div class=&quot;demo-card__music-row&quot;&gt;\n      &lt;ui-card-media square class=&quot;demo-card__media demo-card__media--music&quot;&gt;&lt;/ui-card-media&gt;\n      &lt;div class=&quot;demo-card__music-info&quot;&gt;\n        &lt;div :class=&quot;[$tt(&#39;headline5&#39;), &#39;demo-card__music-title&#39;]&quot;&gt;Rozes&lt;/div&gt;\n        &lt;div :class=&quot;[$tt(&#39;body2&#39;), &#39;demo-card__music-artist&#39;]&quot;&gt;Under the Grave&lt;/div&gt;\n        &lt;div :class=&quot;[$tt(&#39;body2&#39;), &#39;demo-card__music-year&#39;]&quot;&gt;(2016)&lt;/div&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n  &lt;/ui-card-content&gt;\n  &lt;hr class=&quot;mdc-list-divider&quot;&gt;\n  &lt;ui-card-actions&gt;\n    &lt;ui-card-buttons class=&quot;demo-card__action-buttons--text-only&quot;&gt;Rate this album&lt;/ui-card-buttons&gt;\n    &lt;ui-card-icons&gt;\n      &lt;ui-icon v-for=&quot;i in 5&quot; :key=&quot;i&quot;\n        class=&quot;demo-card__action-icon--star&quot;\n        :title=&quot;`${i} star${ i &gt; 1 ? &#39;s&#39; : &#39;&#39; }`&quot;&gt;star_border&lt;/ui-icon&gt;\n    &lt;/ui-card-icons&gt;\n  &lt;/ui-card-actions&gt;\n&lt;/ui-card&gt;</code></pre>\n<pre><code class="language-css">/* Sass code */\n.demo-card {\n  width: 350px;\n  margin: 48px;\n}\n\n.demo-card__media {\n  background-image: url(&#39;../images/1-1.jpg&#39;);\n}\n\n.demo-card--music {\n  @include mdc-card-corner-radius(24px 4px);\n\n  @include mdc-rtl {\n    @include mdc-card-corner-radius(4px 24px);\n  }\n}\n\n.demo-card__music-row {\n  display: flex;\n  border-top-left-radius: inherit;\n\n  @include mdc-rtl {\n    border-top-left-radius: 0;\n    border-top-right-radius: inherit;\n  }\n}\n\n.demo-card__media--music {\n  width: 110px;\n  border-top-left-radius: inherit;\n\n  @include mdc-rtl {\n    border-top-left-radius: 0;\n    border-top-right-radius: inherit;\n  }\n}\n\n.demo-card__music-info {\n  display: flex;\n  flex-direction: column;\n  padding: 8px 16px;\n}\n\n.demo-card__action-buttons--text-only {\n  margin-left: 8px;\n}\n\n.demo-card__action-icon--star {\n  margin-left: 4px;\n  margin-right: 4px;\n  cursor: pointer;\n}</code></pre>\n'},"b+2B":function(t,e){t.exports='<pre><code class="language-html">&lt;ui-datepicker :config=&quot;config&quot;\n  :model=&quot;date&quot;\n  placeholder=&quot;Select Multi Date..&quot;\n  @change=&quot;onChange(&#39;date&#39;, $event)&quot;&gt;&lt;/ui-datepicker&gt;</code></pre>\n<pre><code class="language-js">export default {\n  data() {\n    return {\n      date: &#39;&#39;,\n      config: {\n        mode: &#39;multiple&#39;\n      }\n    };\n  },\n  methods: {\n    onChange(field, value) {\n      this[field] = value;\n    }\n  }\n};</code></pre>\n'},bDYD:function(t,e){t.exports='<pre><code class="language-html">&lt;ui-tab-bar class=&quot;hero-demo-tab-bar&quot; v-model=&quot;active&quot;&gt;\n  &lt;ui-tab v-for=&quot;(item, index) in list&quot; :key=&quot;index&quot;&gt;\n    {{ item }}\n  &lt;/ui-tab&gt;\n&lt;/ui-tab-bar&gt;</code></pre>\n<pre><code class="language-css">.hero-demo-tab-bar {\n  background-color: #f2f2f2;\n  max-width: 420px;\n}</code></pre>\n'},bg4W:function(t,e){t.exports='<pre><code class="language-html">&lt;!-- Using Material Icons --&gt;\n&lt;ui-icon-button\n  v-model=&quot;icon1.value&quot;\n  :on=&quot;icon1.on&quot;\n  :off=&quot;icon1.off&quot;&gt;\n&lt;/ui-icon-button&gt;\n\n&lt;!-- Using Font Awesome --&gt;\n&lt;ui-icon-button\n  iconInnerSelector=&quot;.fa&quot;\n  v-model=&quot;icon2.value&quot;\n  :on=&quot;icon2.on&quot;\n  :off=&quot;icon2.off&quot;&gt;\n  &lt;i class=&quot;fa fa-star&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt;\n&lt;/ui-icon-button&gt;\n\n&lt;!-- Disabled Icons --&gt;\n&lt;ui-icon-button\n  :on=&quot;icon1.on&quot;\n  :off=&quot;icon1.off&quot;\n  disabled&gt;\n&lt;/ui-icon-button&gt;</code></pre>\n<pre><code class="language-js">export default {\n  data() {\n    return {\n      icon1: {\n        value: false,\n        on: {\n          content: &#39;favorite&#39;,\n          label: &#39;Remove From Favorites&#39;\n        },\n        off: {\n          content: &#39;favorite_border&#39;,\n          label: &#39;Add to Favorites&#39;\n        }\n      },\n      icon2: {\n        value: true,\n        on: {\n          class: &#39;fa-star&#39;,\n          label: &#39;Unstar this item&#39;\n        },\n        off: {\n          class: &#39;fa-star-o&#39;,\n          label: &#39;Star this item&#39;\n        }\n      }\n    };\n  }\n};</code></pre>\n'},c4y9:function(t,e){t.exports='<pre><code class="language-html">&lt;section&gt;\n  &lt;h3&gt;Example - Two-line Avatar + Text + Icon&lt;/h3&gt;\n  &lt;ui-list twoLine avatar class=&quot;demo-list demo-list--with-avatars demo-list--icon-placeholders&quot;&gt;\n    &lt;ui-item v-for=&quot;(item, index) in folders&quot;\n      :key=&quot;index&quot;\n      :firstIcon=&quot;item.first&quot;\n      :lastIcon=&quot;item.last&quot;&gt;\n      &lt;ui-item-text&gt;{{ item.text }}&lt;/ui-item-text&gt;\n      &lt;ui-item-subtext&gt;{{ item.subtext }}&lt;/ui-item-subtext&gt;\n    &lt;/ui-item&gt;\n  &lt;/ui-list&gt;\n&lt;/section&gt;</code></pre>\n'},cO62:function(t,e){t.exports='<pre><code class="language-html">&lt;h6 :class=&quot;$tt(&#39;headline6&#39;)&quot;&gt;Text Label and Icon&lt;/h6&gt;\n&lt;div class=&quot;demo&quot;&gt;\n  &lt;ui-tab-bar type=&quot;both&quot; v-model=&quot;active&quot;&gt;\n    &lt;ui-tab v-for=&quot;(tab, index) in tabs&quot; :key=&quot;index&quot;\n      type=&quot;both&quot;\n      :icon=&quot;tab.icon&quot;&gt;\n      {{ tab.text }}\n    &lt;/ui-tab&gt;\n  &lt;/ui-tab-bar&gt;\n&lt;/div&gt;\n\n&lt;h6 :class=&quot;$tt(&#39;headline6&#39;)&quot;&gt;Stacked Text Label and Icon&lt;/h6&gt;\n&lt;div class=&quot;demo&quot;&gt;\n  &lt;ui-tab-bar type=&quot;both&quot; v-model=&quot;active&quot;&gt;\n    &lt;ui-tab v-for=&quot;(tab, index) in tabs&quot; :key=&quot;index&quot;\n      type=&quot;both&quot;\n      :icon=&quot;tab.icon&quot;\n      stacked&gt;\n      {{ tab.text }}\n    &lt;/ui-tab&gt;\n  &lt;/ui-tab-bar&gt;\n&lt;/div&gt;</code></pre>\n<pre><code class="language-js">export default {\n  data() {\n    return {\n      active: 0,\n      tabs: [\n        {\n          icon: &#39;phone&#39;,\n          url: &#39;#recents&#39;\n        },\n        {\n          icon: &#39;favorite&#39;,\n          url: &#39;#favorites&#39;\n        },\n        {\n          icon: &#39;person_pin&#39;,\n          url: &#39;#nearby&#39;\n        }\n      ]\n    };\n  }\n};</code></pre>\n'},cc0D:function(t,e){t.exports='<pre><code class="language-html">&lt;ui-chip-set&gt;\n  &lt;ui-chip v-for=&quot;(item, index) in actionList&quot;\n    :key=&quot;index&quot;\n    class=&quot;demo-chip&quot;&gt;\n    &lt;ui-chip-leading-icon&gt;{{ item.icon }}&lt;/ui-chip-leading-icon&gt;\n    &lt;ui-chip-text&gt;{{ item.name }}&lt;/ui-chip-text&gt;\n  &lt;/ui-chip&gt;\n&lt;/ui-chip-set&gt;</code></pre>\n<pre><code class="language-js">export default {\n  data() {\n    return {\n      actionList: [\n        {\n          icon: &#39;wb_sunny&#39;,\n          name: &#39;Turn on lights&#39;\n        },\n        {\n          icon: &#39;bookmark&#39;,\n          name: &#39;Bookmark&#39;\n        },\n        {\n          icon: &#39;alarm&#39;,\n          name: &#39;Set alarm&#39;\n        },\n        {\n          icon: &#39;directions&#39;,\n          name: &#39;Get directions&#39;\n        }\n      ]\n    };\n  }\n};</code></pre>\n'},ct3n:function(t,e){t.exports='<pre><code class="language-html">&lt;ui-menu-anchor&gt;\n  &lt;ui-button raised @click=&quot;$balmUI.onShow(&#39;open&#39;)&quot;&gt;Show&lt;/ui-button&gt;\n\n  &lt;ui-menu\n    v-model=&quot;open&quot;\n    @selected=&quot;onSelected&quot;\n    @cancel=&quot;onCancel&quot;&gt;\n    &lt;ui-menuitem v-for=&quot;(item, index) in items&quot; :key=&quot;index&quot;&gt;\n      {{ item }}\n    &lt;/ui-menuitem&gt;\n  &lt;/ui-menu&gt;\n&lt;/ui-menu-anchor&gt;</code></pre>\n<pre><code class="language-js">export default {\n  data() {\n    return {\n      open: false,\n      items: [&#39;Back&#39;, &#39;Forward&#39;, &#39;Reload&#39;, &#39;-&#39;, &#39;Save As...&#39;, &#39;Help&#39;]\n    };\n  },\n  methods: {\n    onSelected(data) {\n      console.log(&#39;onSelected&#39;, data);\n    },\n    onCancel() {\n      console.log(&#39;onCancel&#39;);\n    }\n  }\n};</code></pre>\n'},dF2i:function(t,e){t.exports='<pre><code class="language-html">&lt;ui-tab-bar class=&quot;custom-demo-tab-bar&quot; v-model=&quot;active&quot;&gt;\n  &lt;ui-tab v-for=&quot;(tab, index) in tabs&quot; :key=&quot;index&quot;\n    type=&quot;both&quot;\n    :icon=&quot;tab.icon&quot;\n    minWidth\n    contentIndicator&gt;\n    {{ tab.text }}\n  &lt;/ui-tab&gt;\n&lt;/ui-tab-bar&gt;</code></pre>\n<pre><code class="language-css">/* Sass code */\n.custom-demo-tab-bar {\n  .mdc-tab {\n    @include mdc-typography(subtitle1);\n    @include mdc-tab-fixed-width(120px);\n    @include mdc-tab-text-label-color($material-color-blue-600);\n    @include mdc-tab-icon-color($material-color-blue-600);\n  }\n  .mdc-tab__ripple {\n    @include mdc-states($material-color-yellow-700);\n  }\n  .mdc-tab--active {\n    @include mdc-tab-text-label-color($material-color-blue-900);\n    @include mdc-tab-icon-color($material-color-blue-900);\n  }\n  .mdc-tab-indicator {\n    @include mdc-tab-indicator-underline-height(5px);\n    @include mdc-tab-indicator-underline-color($material-color-yellow-700);\n  }\n}</code></pre>\n'},dZxO:function(t,e){t.exports='<pre><code class="language-html">&lt;section&gt;\n  &lt;h3&gt;Text only, non-interactive (no states)&lt;/h3&gt;\n  &lt;ui-list nonInteractive class=&quot;demo-list&quot;&gt;\n    &lt;ui-item v-for=&quot;i in 3&quot; :key=&quot;i&quot;&gt;\n      Single-line item\n    &lt;/ui-item&gt;\n  &lt;/ui-list&gt;\n&lt;/section&gt;\n\n&lt;section&gt;\n  &lt;h3&gt;Text only (dense)&lt;/h3&gt;\n  &lt;ui-list dense class=&quot;demo-list&quot;&gt;\n    &lt;ui-item v-for=&quot;i in 3&quot; :key=&quot;i&quot;&gt;\n      Single-line item\n    &lt;/ui-item&gt;\n  &lt;/ui-list&gt;\n&lt;/section&gt;</code></pre>\n'},dbRp:function(t,e){t.exports='<pre><code class="language-html">&lt;section&gt;\n  &lt;h3&gt;Text-Only&lt;/h3&gt;\n  &lt;ui-list twoLine class=&quot;demo-list&quot;&gt;\n    &lt;ui-item v-for=&quot;i in 3&quot; :key=&quot;i&quot;&gt;\n      &lt;ui-item-text&gt;Two-line item&lt;/ui-item-text&gt;\n      &lt;ui-item-subtext&gt;Secondary text&lt;/ui-item-subtext&gt;\n    &lt;/ui-item&gt;\n  &lt;/ui-list&gt;\n&lt;/section&gt;\n\n&lt;section&gt;\n  &lt;h3&gt;Graphic&lt;/h3&gt;\n  &lt;ui-list twoLine class=&quot;demo-list demo-list--icon-placeholders&quot;&gt;\n    &lt;ui-item v-for=&quot;i in 3&quot; :key=&quot;i&quot; firstPlaceholder&gt;\n      &lt;ui-item-text&gt;Two-line item&lt;/ui-item-text&gt;\n      &lt;ui-item-subtext&gt;Secondary text&lt;/ui-item-subtext&gt;\n    &lt;/ui-item&gt;\n  &lt;/ui-list&gt;\n&lt;/section&gt;</code></pre>\n'},ddae:function(t,e,n){var o={"./alert/demo0.md":"NQQ6","./alert/demo1.md":"XXab","./autocomplete/demo0.md":"HJdF","./autocomplete/demo1.md":"Nu9s","./autocomplete/demo2.md":"Z/7x","./button/demo0.md":"LxQT","./button/demo1.md":"sK9k","./button/demo2.md":"+hh3","./button/demo3.md":"LXzF","./button/demo4.md":"1Xkv","./button/demo5.md":"AYqF","./button/demo6.md":"8UR+","./card/demo0.md":"wloq","./card/demo1.md":"XfPe","./card/demo2.md":"FUGW","./card/demo3.md":"aCmL","./checkbox/demo0.md":"ZKNm","./checkbox/demo1.md":"FKpq","./checkbox/demo2.md":"AcTu","./chips/demo0.md":"iwE+","./chips/demo1.md":"lSBW","./chips/demo2.md":"FlZy","./chips/demo3.md":"2qo9","./chips/demo4.md":"cc0D","./chips/demo5.md":"oQYw","./confirm/demo0.md":"H0rg","./confirm/demo1.md":"Gna0","./datepicker/demo1.md":"BnzD","./datepicker/demo2.md":"kvTy","./datepicker/demo3.md":"8bja","./datepicker/demo4.md":"EGEq","./datepicker/demo5.md":"b+2B","./dialog/demo0.md":"hiT1","./dialog/demo1.md":"poPe","./dialog/demo2.md":"z9gS","./drawer/demo0.md":"QOSS","./drawer/demo1.md":"4L9t","./drawer/demo2.md":"KMbe","./drawer/demo3.md":"llx4","./drawer/demo4.md":"mltC","./dropdown/demo0.md":"gTwc","./dropdown/demo1.md":"Sxxp","./dropdown/demo2.md":"VpmM","./elevation/demo0.md":"9+tc","./elevation/demo1.md":"+Lqg","./elevation/demo2.md":"P8Fu","./event/demo0.md":"lge+","./event/demo1.md":"NEwY","./event/demo2.md":"LCqv","./event/demo3.md":"Ngmu","./event/demo4.md":"GuLE","./fab/demo0.md":"fvBB","./fab/demo1.md":"Js8M","./fab/demo2.md":"Hs+w","./fab/demo3.md":"V3IR","./fab/demo4.md":"0Uhr","./grid/demo0.md":"5qYn","./grid/demo1.md":"huQ7","./grid/demo2.md":"1Pfi","./grid/demo3.md":"Qm85","./grid/demo4.md":"g+3Q","./grid/demo5.md":"ynvr","./grid/demo6.md":"PvR7","./grid/demo7.md":"eLxf","./grid/demo8.md":"U9VE","./grid/demo9.md":"v/FX","./icon-button/demo0.md":"ORrX","./icon-button/demo1.md":"ejpW","./icon-button/demo2.md":"bg4W","./icon-button/demo3.md":"nbki","./icon/demo0.md":"YnQO","./icon/demo1.md":"+eER","./icon/demo2.md":"kmw8","./image-list/demo0.md":"NGw+","./image-list/demo1.md":"W0l+","./image-list/demo2.md":"tU+b","./linear-progress/demo0.md":"ePQI","./linear-progress/demo1.md":"ZHq+","./list/demo0.md":"MW7G","./list/demo1.md":"+LzF","./list/demo10.md":"gVDP","./list/demo11.md":"/7CV","./list/demo12.md":"oG7K","./list/demo2.md":"dZxO","./list/demo3.md":"7/oN","./list/demo4.md":"mFG2","./list/demo5.md":"Q9WI","./list/demo6.md":"FArz","./list/demo7.md":"dbRp","./list/demo8.md":"keYf","./list/demo9.md":"c4y9","./menu/demo0.md":"9pG4","./menu/demo1.md":"ct3n","./radio/demo0.md":"x9bS","./radio/demo1.md":"+g3H","./ripple/demo0.md":"ihNF","./ripple/demo1.md":"kSIg","./ripple/demo2.md":"C+ac","./ripple/demo3.md":"o6KT","./select/demo0.md":"BV+e","./select/demo1.md":"/tRe","./select/demo2.md":"laUp","./select/demo3.md":"FME5","./select/demo4.md":"yAg/","./select/demo5.md":"f3Uk","./select/demo6.md":"V2US","./shape/demo0.md":"pCC8","./shape/demo1.md":"hmYx","./slider/demo0.md":"+Hk6","./slider/demo1.md":"PGPd","./snackbar/demo0.md":"epip","./snackbar/demo1.md":"6iKR","./switch/demo0.md":"kWhw","./switch/demo1.md":"0HsE","./tabs/demo0.md":"QLg9","./tabs/demo1.md":"jne1","./tabs/demo2.md":"cO62","./tabs/demo3.md":"I9yt","./tabs/demo4.md":"Hpe4","./tabs/demo5.md":"bDYD","./tabs/demo6.md":"EQdG","./tabs/demo7.md":"dF2i","./tabs/demo8.md":"5VFu","./tabs/demo9.md":"Romc","./textfield/demo0.md":"oM9C","./textfield/demo1.md":"Po75","./textfield/demo2.md":"RXEe","./textfield/demo3.md":"tZAW","./textfield/demo4.md":"WIne","./textfield/demo5.md":"NDOf","./textfield/demo6.md":"yUax","./textfield/demo7.md":"Q1zD","./textfield/demo8.md":"y89u","./theme/demo0.md":"tDea","./theme/demo1.md":"1fpl","./theme/demo2.md":"Np/8","./theme/demo3.md":"fZSO","./theme/demo4.md":"p/y3","./toast/demo0.md":"lW8Q","./toast/demo1.md":"Fd0s","./top-app-bar/demo0.md":"RwWQ","./top-app-bar/demo1.md":"XoHX","./typography/demo0.md":"BapH","./typography/demo1.md":"/epX","./validator/demo0.md":"iDhh","./validator/demo1.md":"QwAn"};function l(t){var e=i(t);return n(e)}function i(t){var e=o[t];if(!(e+1)){var n=new Error("Cannot find module '"+t+"'");throw n.code="MODULE_NOT_FOUND",n}return e}l.keys=function(){return Object.keys(o)},l.resolve=i,t.exports=l,l.id="ddae"},eLxf:function(t,e){t.exports='<pre><code class="language-html">&lt;ui-grid class=&quot;demo-grid max-width&quot; position=&quot;left&quot;&gt;\n  &lt;ui-grid-cell class=&quot;demo-cell&quot; colspan=&quot;4&quot;&gt;&lt;/ui-grid-cell&gt;\n  &lt;ui-grid-cell class=&quot;demo-cell&quot; colspan=&quot;4&quot;&gt;&lt;/ui-grid-cell&gt;\n  &lt;ui-grid-cell class=&quot;demo-cell&quot; colspan=&quot;4&quot;&gt;&lt;/ui-grid-cell&gt;\n&lt;/ui-grid&gt;</code></pre>\n<pre><code class="language-css">.demo-grid.max-width {\n  max-width: 1280px;\n}</code></pre>\n'},ePQI:function(t,e){t.exports='<p>Default Usage</p>\n<pre><code class="language-js">import Vue from &#39;vue&#39;;\nimport BalmUI from &#39;balm-ui&#39;;\n\nVue.use(BalmUI, {\n  // Optional. Overwrite `&lt;ui-linear-progress&gt;` props.\n  UiLinearProgress: {\n    // some props\n  }\n});</code></pre>\n<p>Standalone Usage</p>\n<pre><code class="language-js">import Vue from &#39;vue&#39;;\nimport UiLinearProgress from &#39;balm-ui/components/linear-progress&#39;;\n\n// (Recommended) Splitting CSS out from the main application, see BalmUI advanced usage.\nimport &#39;balm-ui/components/core.css&#39;;\nimport &#39;balm-ui/components/linear-progress.css&#39;;\n\n// Optional. Overwrite `&lt;ui-linear-progress&gt;` props.\nVue.use(UiLinearProgress, {\n  // some props\n});</code></pre>\n'},ejpW:function(t,e){t.exports='<pre><code class="language-html">&lt;!-- Material Icons --&gt;\n&lt;ui-icon-button&gt;favorite&lt;/ui-icon-button&gt;\n&lt;ui-icon-button&gt;airplanemode_active&lt;/ui-icon-button&gt;\n&lt;ui-icon-link&gt;directions_transit&lt;/ui-icon-link&gt;\n\n&lt;!-- SVG Icon --&gt;\n&lt;ui-icon-button&gt;\n  &lt;ui-logo&gt;&lt;/ui-logo&gt;\n&lt;/ui-icon-button&gt;\n\n&lt;!-- Disabled Buttons --&gt;\n&lt;ui-icon-button disabled&gt;airplanemode_active&lt;/ui-icon-button&gt;\n&lt;ui-icon-button disabled&gt;\n  &lt;ui-logo&gt;&lt;/ui-logo&gt;\n&lt;/ui-icon-button&gt;\n\n&lt;!-- Larger Buttons --&gt;\n&lt;ui-icon-button class=&quot;demo-icon-button-large&quot;&gt;airplanemode_active&lt;/ui-icon-button&gt;\n&lt;ui-icon-button class=&quot;demo-icon-button-large&quot;&gt;\n  &lt;ui-logo&gt;&lt;/ui-logo&gt;\n&lt;/ui-icon-button&gt;</code></pre>\n<pre><code class="language-css">.demo-icon-button-large {\n  width: 72px;\n  height: 72px;\n  padding: 18px;\n  font-size: 36px;\n}</code></pre>\n'},epip:function(t,e){t.exports='<p>Default Usage</p>\n<pre><code class="language-js">import Vue from &#39;vue&#39;;\nimport BalmUI from &#39;balm-ui&#39;;\n\nVue.use(BalmUI, {\n  // Optional. Overwrite `&lt;ui-snackbar&gt;` props.\n  UiSnackbar: {\n    // some props\n  }\n});</code></pre>\n<p>Standalone Usage</p>\n<pre><code class="language-js">import Vue from &#39;vue&#39;;\nimport UiSnackbar from &#39;balm-ui/components/snackbar&#39;;\n\n// (Recommended) Splitting CSS out from the main application, see BalmUI advanced usage.\nimport &#39;balm-ui/components/core.css&#39;;\nimport &#39;balm-ui/components/snackbar.css&#39;;\n\n// Optional. Overwrite `&lt;ui-snackbar&gt;` props.\nVue.use(UiSnackbar, {\n  // some props\n});</code></pre>\n'},f3Uk:function(t,e){t.exports='<pre><code class="language-html">&lt;ui-select id=&quot;select-optgroups&quot;\n  group\n  v-model=&quot;selected&quot;\n  :options=&quot;options&quot;&gt;\n  Food Group\n&lt;/ui-select&gt;</code></pre>\n<pre><code class="language-js">const options = [\n  {\n    label: &#39;Meats&#39;,\n    items: [\n      {\n        label: &#39;Steak&#39;,\n        value: &#39;steak&#39;\n      },\n      {\n        label: &#39;Hamburger&#39;,\n        value: &#39;hamburger&#39;\n      }\n    ]\n  },\n  {\n    label: &#39;Vegetables&#39;,\n    items: [\n      {\n        label: &#39;Beet&#39;,\n        value: &#39;beet&#39;\n      },\n      {\n        label: &#39;Carrot&#39;,\n        value: &#39;carrot&#39;\n      }\n    ]\n  }\n];\n\nexport default {\n  data() {\n    return {\n      options,\n      selected: &#39;steak&#39;\n    };\n  }\n};</code></pre>\n'},fZSO:function(t,e){t.exports='<pre><code class="language-html">&lt;div class=&quot;demo-theme-color-section__row&quot;&gt;\n  &lt;fieldset class=&quot;demo-fieldset--color&quot;&gt;\n    &lt;legend :class=&quot;$tt(&#39;subtitle1&#39;)&quot;&gt;Text on primary&lt;/legend&gt;\n\n    &lt;div class=&quot;demo-theme-color-group&quot;&gt;\n      &lt;div :class=&quot;[&#39;demo-theme-text-row&#39;, $themeColor(&#39;primary-bg&#39;), $tt(&#39;body2&#39;)]&quot;&gt;\n        &lt;span :class=&quot;[&#39;demo-theme-text-style&#39;, $themeColor(&#39;on-primary&#39;)]&quot;&gt;Text&lt;/span&gt;\n        &lt;span :class=&quot;[&#39;demo-theme-text-style&#39;, $themeColor(&#39;on-primary&#39;), &#39;material-icons&#39;]&quot;&gt;favorite&lt;/span&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n  &lt;/fieldset&gt;\n\n  &lt;fieldset class=&quot;demo-fieldset--color&quot;&gt;\n    &lt;legend :class=&quot;$tt(&#39;subtitle1&#39;)&quot;&gt;Text on secondary&lt;/legend&gt;\n\n    &lt;div class=&quot;demo-theme-color-group&quot;&gt;\n      &lt;div :class=&quot;[&#39;demo-theme-text-row&#39;, $themeColor(&#39;secondary-bg&#39;), $tt(&#39;body2&#39;)]&quot;&gt;\n        &lt;span :class=&quot;[&#39;demo-theme-text-style&#39;, $themeColor(&#39;on-secondary&#39;)]&quot;&gt;Text&lt;/span&gt;\n        &lt;span :class=&quot;[&#39;demo-theme-text-style&#39;, $themeColor(&#39;on-secondary&#39;), &#39;material-icons&#39;]&quot;&gt;favorite&lt;/span&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n  &lt;/fieldset&gt;\n&lt;/div&gt;</code></pre>\n'},fvBB:function(t,e){t.exports='<p>Default Usage</p>\n<pre><code class="language-js">import Vue from &#39;vue&#39;;\nimport BalmUI from &#39;balm-ui&#39;;\n\nVue.use(BalmUI, {\n  // Optional. Overwrite `&lt;ui-fab&gt;` props.\n  UiFab: {\n    // some props\n  }\n});</code></pre>\n<p>Standalone Usage</p>\n<pre><code class="language-js">import Vue from &#39;vue&#39;;\nimport UiFab from &#39;balm-ui/components/fab&#39;;\n\n// (Recommended) Splitting CSS out from the main application, see BalmUI advanced usage.\nimport &#39;balm-ui/components/core.css&#39;;\nimport &#39;balm-ui/components/fab.css&#39;;\nimport &#39;balm-ui/components/icon.css&#39;;\n\n// Optional. Overwrite `&lt;ui-fab&gt;` props.\nVue.use(UiFab, {\n  // some props\n});</code></pre>\n'},"g+3Q":function(t,e){t.exports='<pre><code class="language-html">&lt;ui-grid class=&quot;demo-grid&quot;&gt;\n  &lt;ui-grid-cell class=&quot;demo-cell&quot; :colspan=&quot;{default:6, tablet:8}&quot;&gt;6 (8 tablet)&lt;/ui-grid-cell&gt;\n  &lt;ui-grid-cell class=&quot;demo-cell&quot; :colspan=&quot;{default:4, tablet:6}&quot;&gt;4 (6 tablet)&lt;/ui-grid-cell&gt;\n  &lt;ui-grid-cell class=&quot;demo-cell&quot; :colspan=&quot;{default:2, phone:4}&quot;&gt;2 (4 phone)&lt;/ui-grid-cell&gt;\n&lt;/ui-grid&gt;</code></pre>\n'},gTwc:function(t,e){t.exports='<p>Default Usage</p>\n<pre><code class="language-js">import Vue from &#39;vue&#39;;\nimport BalmUIPlus from &#39;balm-ui/dist/balm-ui-plus&#39;;\n\nVue.use(BalmUIPlus, {\n  // Optional. Overwrite `&lt;ui-dropdown&gt;` props.\n  UiDropdown: {\n    // some props\n  }\n});</code></pre>\n<p>Standalone Usage</p>\n<pre><code class="language-js">import Vue from &#39;vue&#39;;\nimport UiDropdown from &#39;balm-ui/components/dropdown&#39;;\n\n// (Recommended) Splitting CSS out from the main application, see BalmUI advanced usage.\nimport &#39;balm-ui/components/core.css&#39;;\nimport &#39;balm-ui/components/menu.css&#39;;\nimport &#39;balm-ui/components/dropdown.css&#39;;\n\n// Optional. Overwrite `&lt;ui-dropdown&gt;` props.\nVue.use(UiDropdown, {\n  // some props\n});</code></pre>\n'},gVDP:function(t,e){t.exports='<pre><code class="language-html">&lt;section&gt;\n    &lt;h3&gt;Full-Width Dividers&lt;/h3&gt;\n    &lt;ui-list class=&quot;demo-list&quot;&gt;\n      &lt;ui-item v-for=&quot;i in 3&quot; :key=&quot;i&quot;&gt;Single-line item - section 1&lt;/ui-item&gt;\n      &lt;ui-item-divider&gt;&lt;/ui-item-divider&gt;\n      &lt;ui-item v-for=&quot;i in 2&quot; :key=&quot;i + 3&quot;&gt;Single-line item - section 2&lt;/ui-item&gt;\n    &lt;/ui-list&gt;\n  &lt;/section&gt;\n\n  &lt;section&gt;\n    &lt;h3&gt;Inset Dividers&lt;/h3&gt;\n    &lt;ui-list avatar class=&quot;demo-list demo-list--with-avatars demo-list demo-list--icon-placeholders&quot;&gt;\n      &lt;ui-item v-for=&quot;i in 3&quot; :key=&quot;i&quot; firstPlaceholder&gt;\n        Single-line item - section 1\n      &lt;/ui-item&gt;\n      &lt;ui-item-divider inset&gt;&lt;/ui-item-divider&gt;\n      &lt;ui-item v-for=&quot;i in 2&quot; :key=&quot;i + 3&quot; firstPlaceholder&gt;\n        Single-line item - section 2\n      &lt;/ui-item&gt;\n    &lt;/ui-list&gt;\n  &lt;/section&gt;\n&lt;/section&gt;</code></pre>\n'},hiT1:function(t,e){t.exports='<p>Default Usage</p>\n<pre><code class="language-js">import Vue from &#39;vue&#39;;\nimport BalmUI from &#39;balm-ui&#39;;\n\nVue.use(BalmUI, {\n  // Optional. Overwrite `&lt;ui-dialog&gt;` props.\n  UiDialog: {\n    // some props\n  },\n  // Optional. Overwrite `&lt;ui-dialog-footer&gt;` props.\n  UiDialogFooter: {\n    // some props\n  }\n});</code></pre>\n<p>Standalone Usage</p>\n<pre><code class="language-js">import Vue from &#39;vue&#39;;\nimport UiDialogComponents from &#39;balm-ui/components/dialog&#39;;\n\n// (Recommended) Splitting CSS out from the main application, see BalmUI advanced usage.\nimport &#39;balm-ui/components/core.css&#39;;\nimport &#39;balm-ui/components/dialog.css&#39;;\n\nVue.use(UiDialogComponents, {\n  // Optional. Overwrite `&lt;ui-dialog&gt;` props.\n  UiDialog: {\n    // some props\n  },\n  // Optional. Overwrite `&lt;ui-dialog-footer&gt;` props.\n  UiDialogFooter: {\n    // some props\n  }\n});</code></pre>\n'},hmYx:function(t,e){t.exports=""},huQ7:function(t,e){t.exports='<pre><code class="language-html">&lt;ui-grid class=&quot;demo-grid&quot;&gt;\n  &lt;ui-grid-cell class=&quot;demo-cell&quot;&gt;4&lt;/ui-grid-cell&gt;\n  &lt;ui-grid-cell class=&quot;demo-cell&quot;&gt;4&lt;/ui-grid-cell&gt;\n  &lt;ui-grid-cell class=&quot;demo-cell&quot;&gt;4&lt;/ui-grid-cell&gt;\n&lt;/ui-grid&gt;</code></pre>\n'},iDhh:function(t,e){t.exports='<p>Default Usage</p>\n<pre><code class="language-js">import Vue from &#39;vue&#39;;\nimport BalmUIPlus from &#39;balm-ui/dist/balm-ui-plus&#39;;\nimport validatorRules from &#39;./config/validator-rules&#39;;\n\nVue.use(BalmUIPlus, {\n  // Optional. Set global validator rules.\n  validator: validatorRules\n});</code></pre>\n<p>Standalone Usage</p>\n<pre><code class="language-js">import Vue from &#39;vue&#39;;\nimport validator from &#39;balm-ui/plugins/validator&#39;;\nimport validatorRules from &#39;./config/validator-rules&#39;;\n\n// Optional. Set global validator rules.\nVue.use(validator, validatorRules);</code></pre>\n<p>Custom global validator rules</p>\n<pre><code class="language-js">import { types } from &#39;balm-ui/dist/balm-ui-plus&#39;; // Default Usage\n// OR\n// import types from &#39;balm-ui/utils/types&#39;; // Standalone Usage\n\nexport default {\n  required: {\n    validate(value) {\n      let result = false;\n      if (types.isString(value)) {\n        result = value.trim() !== &#39;&#39;;\n      } else if (types.isArray(value)) {\n        return value.length;\n      } else {\n        result = value;\n      }\n      return result;\n    },\n    message: &#39;%s is required&#39;\n  },\n  mobile: {\n    validate(value) {\n      return /^1[34578]\\d{9}$/.test(value);\n    },\n    message: &#39;Invalid phone number&#39;\n  },\n  password: {\n    validate(value) {\n      return /^\\w+$/.test(value);\n    },\n    message: &#39;Invalid password: must be a letter, digit or underline&#39;\n  }\n};</code></pre>\n'},ihNF:function(t,e){t.exports='<p>Default Usage</p>\n<pre><code class="language-js">import Vue from &#39;vue&#39;;\nimport BalmUI from &#39;balm-ui&#39;;\n\nVue.use(BalmUI);</code></pre>\n<p>Standalone Usage</p>\n<pre><code class="language-js">import Vue from &#39;vue&#39;;\nimport ripple from &#39;balm-ui/directives/ripple&#39;;\n\n// (Recommended) Splitting CSS out from the main application, see BalmUI advanced usage.\nimport &#39;balm-ui/components/core.css&#39;; // (Include &#39;directives/ripple.css&#39;)\n// OR\nimport &#39;balm-ui/directives/ripple.css&#39;;\n\nVue.directive(ripple.name, ripple);</code></pre>\n'},"iwE+":function(t,e){t.exports='<p>Default Usage</p>\n<pre><code class="language-js">import Vue from &#39;vue&#39;;\nimport BalmUI from &#39;balm-ui&#39;;\n\nVue.use(BalmUI, {\n  // Optional. Overwrite `&lt;ui-chip-set&gt;` props.\n  UiChipSet: {\n    // some props\n  }\n});</code></pre>\n<p>Standalone Usage</p>\n<pre><code class="language-js">import Vue from &#39;vue&#39;;\nimport UiChipsComponents from &#39;balm-ui/components/chips&#39;;\n\n// (Recommended) Splitting CSS out from the main application, see BalmUI advanced usage.\nimport &#39;balm-ui/components/core.css&#39;;\nimport &#39;balm-ui/components/chips.css&#39;;\nimport &#39;balm-ui/components/icon.css&#39;; // Optional.\n\nVue.use(UiChipsComponents, {\n  // Optional. Overwrite `&lt;ui-chip-set&gt;` props.\n  UiChipSet: {\n    // some props\n  }\n});</code></pre>\n'},jne1:function(t,e){t.exports='<pre><code class="language-html">&lt;h6 :class=&quot;$tt(&#39;headline6&#39;)&quot;&gt;Text Label&lt;/h6&gt;\n&lt;div class=&quot;demo&quot;&gt;\n  &lt;ui-tab-bar v-model=&quot;active&quot;&gt;\n    &lt;ui-tab v-for=&quot;(tab, index) in tabs&quot; :key=&quot;index&quot;&gt;\n      {{ tab.text }}\n    &lt;/ui-tab&gt;\n  &lt;/ui-tab-bar&gt;\n&lt;/div&gt;\n\n&lt;h6 :class=&quot;$tt(&#39;headline6&#39;)&quot;&gt;Icon&lt;/h6&gt;\n&lt;div class=&quot;demo&quot;&gt;\n  &lt;ui-tab-bar v-model=&quot;active&quot;&gt;\n    &lt;ui-tab v-for=&quot;(tab, index) in tabs&quot; :key=&quot;index&quot;\n      type=&quot;icon&quot;\n      :icon=&quot;tab.icon&quot;&gt;\n    &lt;/ui-tab&gt;\n  &lt;/ui-tab-bar&gt;\n&lt;/div&gt;</code></pre>\n<pre><code class="language-js">export default {\n  data() {\n    return {\n      active: 0,\n      tabs: [\n        {\n          text: &#39;Favorites&#39;,\n          icon: &#39;favorite&#39;\n        },\n        {\n          text: &#39;Recents&#39;,\n          icon: &#39;phone&#39;\n        },\n        {\n          text: &#39;Nearby&#39;,\n          icon: &#39;near_me&#39;\n        }\n      ]\n    };\n  }\n};</code></pre>\n'},kSIg:function(t,e){t.exports='<pre><code class="language-html">&lt;section class=&quot;example&quot;&gt;\n  &lt;div&gt;\n    &lt;h2&gt;Bounded&lt;/h2&gt;\n    &lt;div class=&quot;demo-surface&quot; v-ripple v-shadow=&quot;2&quot;&gt;\n      Interact with me!\n    &lt;/div&gt;\n  &lt;/div&gt;\n  &lt;div&gt;\n    &lt;h2&gt;Bounded - CSS Only&lt;/h2&gt;\n    &lt;div class=&quot;demo-surface&quot; v-ripple:cssOnly v-shadow=&quot;2&quot;&gt;\n      Interact with me!\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/section&gt;</code></pre>\n'},kWhw:function(t,e){t.exports='<p>Default Usage</p>\n<pre><code class="language-js">import Vue from &#39;vue&#39;;\nimport BalmUI from &#39;balm-ui&#39;;\n\nVue.use(BalmUI, {\n  // Optional. Overwrite `&lt;ui-switch&gt;` props.\n  UiSwitch: {\n    // some props\n  }\n});</code></pre>\n<p>Standalone Usage</p>\n<pre><code class="language-js">import Vue from &#39;vue&#39;;\nimport UiSwitch from &#39;balm-ui/components/switch&#39;;\n\n// (Recommended) Splitting CSS out from the main application, see BalmUI advanced usage.\nimport &#39;balm-ui/components/core.css&#39;;\nimport &#39;balm-ui/components/switch.css&#39;;\n\n// Optional. Overwrite `&lt;ui-switch&gt;` props.\nVue.use(UiSwitch, {\n  // some props\n});</code></pre>\n'},keYf:function(t,e){t.exports='<pre><code class="language-html">&lt;section&gt;\n  &lt;h3&gt;Avatar List&lt;/h3&gt;\n  &lt;ui-list twoLine avatar class=&quot;demo-list demo-list--with-avatars demo-list--icon-placeholders&quot;&gt;\n    &lt;ui-item v-for=&quot;i in 3&quot; :key=&quot;i&quot; firstPlaceholder&gt;\n      &lt;ui-item-text&gt;Two-line item&lt;/ui-item-text&gt;\n      &lt;ui-item-subtext&gt;Secondary text&lt;/ui-item-subtext&gt;\n    &lt;/ui-item&gt;\n  &lt;/ui-list&gt;\n&lt;/section&gt;\n\n&lt;section&gt;\n  &lt;h3&gt;Metadata&lt;/h3&gt;\n  &lt;ui-list twoLine class=&quot;demo-list&quot;&gt;\n    &lt;ui-item v-for=&quot;i in 3&quot;\n      :key=&quot;i&quot;\n      :lastText=&quot;`$${i}0.00`&quot;&gt;\n      &lt;ui-item-text&gt;Two-line item&lt;/ui-item-text&gt;\n      &lt;ui-item-subtext&gt;Secondary text&lt;/ui-item-subtext&gt;\n    &lt;/ui-item&gt;\n  &lt;/ui-list&gt;\n&lt;/section&gt;</code></pre>\n'},kmw8:function(t,e){t.exports='<pre><code class="language-html">&lt;div class=&quot;icons-preview-code&quot;&gt;\n  &lt;div class=&quot;icons-preview&quot;&gt;\n    &lt;ui-icon dark&gt;face&lt;/ui-icon&gt;\n    &lt;div class=&quot;icon-caption&quot;&gt;Normal&lt;/div&gt;\n  &lt;/div&gt;\n  &lt;div class=&quot;icons-preview&quot;&gt;\n    &lt;ui-icon dark inactive&gt;face&lt;/ui-icon&gt;\n    &lt;div class=&quot;icon-caption&quot;&gt;Disabled&lt;/div&gt;\n  &lt;/div&gt;\n  &lt;div class=&quot;icons-preview icons-dark-bg&quot;&gt;\n    &lt;ui-icon light&gt;face&lt;/ui-icon&gt;\n    &lt;div class=&quot;icon-caption&quot;&gt;Normal&lt;/div&gt;\n  &lt;/div&gt;\n  &lt;div class=&quot;icons-preview icons-dark-bg&quot;&gt;\n    &lt;ui-icon light inactive&gt;face&lt;/ui-icon&gt;\n    &lt;div class=&quot;icon-caption&quot;&gt;Disabled&lt;/div&gt;\n  &lt;/div&gt;\n  &lt;div class=&quot;icons-preview&quot;&gt;\n    &lt;ui-icon class=&quot;orange600&quot;&gt;face&lt;/ui-icon&gt;\n    &lt;div class=&quot;icon-caption&quot;&gt;orange600&lt;/div&gt;\n  &lt;/div&gt;\n&lt;/div&gt;</code></pre>\n<pre><code class="language-css">.orange600 {\n  color: #fb8c00;\n}</code></pre>\n'},kvTy:function(t,e){t.exports='<pre><code class="language-html">&lt;ui-datepicker :config=&quot;config&quot;\n  :model=&quot;date&quot;\n  placeholder=&quot;Select Date..&quot;\n  toggle\n  @change=&quot;onChange(&#39;date&#39;, $event)&quot;&gt;\n  &lt;i slot=&quot;toggle&quot; class=&quot;fa fa-calendar&quot;&gt;&lt;/i&gt;\n&lt;/ui-datepicker&gt;</code></pre>\n<pre><code class="language-js">export default {\n  data() {\n    return {\n      date: &#39;&#39;,\n      config: {\n        defaultDate: &#39;today&#39;\n      }\n    };\n  },\n  methods: {\n    onChange(field, value) {\n      this[field] = value;\n    }\n  }\n};</code></pre>\n'},lSBW:function(t,e){t.exports='<pre><code class="language-html">&lt;input id=&quot;input-chip-set-input&quot; v-model=&quot;name&quot; placeholder=&quot;Chip text&quot;&gt;\n&lt;ui-button dense id=&quot;input-chip-set-button&quot;\n  @click=&quot;addOne&quot;&gt;\n  Add Input Chip\n&lt;/ui-button&gt;\n&lt;ui-button dense id=&quot;input-chip-set-delete-button&quot;\n  @click=&quot;removeLastOne&quot;&gt;\n  Delete Last Chip\n&lt;/ui-button&gt;\n&lt;ui-chip-set input id=&quot;input-chip-set&quot; :items=&quot;list&quot;&gt;\n  &lt;ui-chip v-for=&quot;item in list&quot; :key=&quot;item.id&quot; class=&quot;demo-chip&quot;&gt;\n    &lt;ui-chip-leading-icon&gt;face&lt;/ui-chip-leading-icon&gt;\n    &lt;ui-chip-text&gt;{{ item.name }}&lt;/ui-chip-text&gt;\n    &lt;ui-chip-trailing-icon @click=&quot;removeOneById(item.id)&quot;&gt;&lt;/ui-chip-trailing-icon&gt;\n  &lt;/ui-chip&gt;\n&lt;/ui-chip-set&gt;</code></pre>\n<pre><code class="language-js">export default {\n  data() {\n    return {\n      lastId: 2,\n      name: &#39;&#39;,\n      list: [\n        {\n          id: 1,\n          name: &#39;Jane Smith&#39;\n        },\n        {\n          id: 2,\n          name: &#39;John Doe&#39;\n        }\n      ]\n    };\n  },\n  methods: {\n    addOne() {\n      if (this.name.trim().length) {\n        this.lastId++;\n        this.list.push({\n          id: this.lastId,\n          name: this.name\n        });\n        this.name = &#39;&#39;;\n      }\n    },\n    removeLastOne() {\n      this.list.pop();\n    },\n    removeOneById(id) {\n      let index = this.list.findIndex(item =&gt; item.id === id);\n      this.list.splice(index, 1);\n    }\n  }\n};</code></pre>\n'},lW8Q:function(t,e){t.exports='<p>Default Usage</p>\n<pre><code class="language-js">import Vue from &#39;vue&#39;;\nimport BalmUIPlus from &#39;balm-ui/dist/balm-ui-plus&#39;;\n\nVue.use(BalmUIPlus, {\n  // Optional. Overwrite `$toast` options.\n  toast: {\n    // some options\n  }\n});</code></pre>\n<p>Standalone Usage</p>\n<pre><code class="language-js">import Vue from &#39;vue&#39;;\nimport toast from &#39;balm-ui/plugins/toast&#39;;\n\n// (Recommended) Splitting CSS out from the main application, see BalmUI advanced usage.\nimport &#39;balm-ui/components/core.css&#39;;\nimport &#39;balm-ui/components/snackbar.css&#39;;\n\n// Optional. Overwrite `$toast` options.\nVue.use(toast, {\n  // some options\n});</code></pre>\n'},laUp:function(t,e){t.exports='<pre><code class="language-html">&lt;ui-select box&gt;\n  Food Group\n&lt;/ui-select&gt;</code></pre>\n'},"lge+":function(t,e){t.exports='<p>Default Usage</p>\n<pre><code class="language-js">import Vue from &#39;vue&#39;;\nimport BalmUI from &#39;balm-ui&#39;;\n\nVue.use(BalmUI);</code></pre>\n<p>Standalone Usage</p>\n<pre><code class="language-js">import Vue from &#39;vue&#39;;\nimport event from &#39;balm-ui/plugins/event&#39;;\n\nVue.use(event);</code></pre>\n'},llx4:function(t,e){t.exports='<pre><code class="language-html">&lt;ui-permanent-drawer&gt;\n  &lt;ui-drawer-toolbar-spacer&gt;&lt;/ui-drawer-toolbar-spacer&gt;\n  &lt;ui-drawer-content&gt;\n    &lt;ui-list-group&gt;\n      &lt;ui-list-nav&gt;\n        &lt;ui-item-link v-for=&quot;(item, index) in menu1&quot; :key=&quot;index&quot; :firstIcon=&quot;item.icon&quot;&gt;\n          {{ item.name }}\n        &lt;/ui-item-link&gt;\n      &lt;/ui-list-nav&gt;\n      &lt;ui-list-divider&gt;&lt;/ui-list-divider&gt;\n      &lt;ui-list-nav&gt;\n        &lt;ui-item-link v-for=&quot;(item, index) in menu2&quot; :key=&quot;index&quot; :firstIcon=&quot;item.icon&quot;&gt;\n          {{ item.name }}\n        &lt;/ui-item-link&gt;\n      &lt;/ui-list-nav&gt;\n    &lt;/ui-list-group&gt;\n  &lt;/ui-drawer-content&gt;\n&lt;/ui-permanent-drawer&gt;\n\n&lt;div class=&quot;demo-content&quot;&gt;\n  &lt;ui-top-app-bar contentSelector=&quot;.demo-main&quot; :class=&quot;$shadow(4)&quot;&gt;\n    &lt;template slot=&quot;logo&quot;&gt;\n      &lt;ui-toolbar-anchor type=&quot;menu&quot;\n        @click.native=&quot;() =&gt; { $router.back(); }&quot;&gt;&amp;#xE5C4;&lt;/ui-toolbar-anchor&gt;\n    &lt;/template&gt;\n    Permanent Drawer Above Toolbar\n  &lt;/ui-top-app-bar&gt;\n\n  &lt;main class=&quot;demo-main&quot;&gt;\n    &lt;h1 :class=&quot;$tt(&#39;headline4&#39;)&quot;&gt;Permanent Drawer&lt;/h1&gt;\n    &lt;p :class=&quot;$tt(&#39;body1&#39;)&quot;&gt;It sits to the left of this content.&lt;/p&gt;\n  &lt;/main&gt;\n&lt;/div&gt;</code></pre>\n'},mFG2:function(t,e){t.exports='<pre><code class="language-html">&lt;section&gt;\n  &lt;h3&gt;Avatar List&lt;/h3&gt;\n  &lt;ui-list avatar class=&quot;demo-list demo-list--with-avatars demo-list--icon-placeholders&quot;&gt;\n    &lt;ui-item v-for=&quot;i in 3&quot; :key=&quot;i&quot; firstPlaceholder&gt;\n      Single-line item\n    &lt;/ui-item&gt;\n  &lt;/ui-list&gt;\n&lt;/section&gt;\n\n&lt;section&gt;\n  &lt;h3&gt;Avatar List (dense)&lt;/h3&gt;\n  &lt;ui-list avatar dense class=&quot;demo-list demo-list--with-avatars demo-list--icon-placeholders&quot;&gt;\n    &lt;ui-item v-for=&quot;i in 3&quot; :key=&quot;i&quot; firstPlaceholder&gt;\n      Single-line item\n    &lt;/ui-item&gt;\n  &lt;/ui-list&gt;\n&lt;/section&gt;\n\n&lt;section&gt;\n  &lt;h3&gt;Example - Avatar with Text&lt;/h3&gt;\n  &lt;ui-list avatar dense class=&quot;demo-list demo-list--with-avatars&quot;&gt;\n    &lt;ui-item v-for=&quot;(item, index) in items&quot;\n      :key=&quot;index&quot;\n      :firstImage=&quot;item.avatar&quot;&gt;\n      {{ item.name }}\n    &lt;/ui-item&gt;\n  &lt;/ui-list&gt;\n&lt;/section&gt;</code></pre>\n'},mltC:function(t,e){t.exports='<pre><code class="language-html">&lt;ui-top-app-bar fixed contentSelector=&quot;.demo-content&quot; :class=&quot;$shadow(4)&quot;&gt;\n  &lt;template slot=&quot;logo&quot;&gt;\n    &lt;ui-toolbar-anchor type=&quot;menu&quot;\n      @click.native=&quot;() =&gt; { $router.back(); }&quot;&gt;&amp;#xE5C4;&lt;/ui-toolbar-anchor&gt;\n  &lt;/template&gt;\n  Permanent Drawer Below Toolbar\n&lt;/ui-top-app-bar&gt;\n\n&lt;div class=&quot;demo-content&quot;&gt;\n  &lt;ui-permanent-drawer&gt;\n    &lt;ui-drawer-content&gt;\n      &lt;ui-list-group&gt;\n        &lt;ui-list-nav&gt;\n          &lt;ui-item-link v-for=&quot;(item, index) in menu1&quot; :key=&quot;index&quot; :firstIcon=&quot;item.icon&quot;&gt;\n            {{ item.name }}\n          &lt;/ui-item-link&gt;\n        &lt;/ui-list-nav&gt;\n        &lt;ui-list-divider&gt;&lt;/ui-list-divider&gt;\n        &lt;ui-list-nav&gt;\n          &lt;ui-item-link v-for=&quot;(item, index) in menu2&quot; :key=&quot;index&quot; :firstIcon=&quot;item.icon&quot;&gt;\n            {{ item.name }}\n          &lt;/ui-item-link&gt;\n        &lt;/ui-list-nav&gt;\n      &lt;/ui-list-group&gt;\n    &lt;/ui-drawer-content&gt;\n  &lt;/ui-permanent-drawer&gt;\n\n  &lt;main class=&quot;demo-main&quot;&gt;\n    &lt;h1 :class=&quot;$tt(&#39;headline4&#39;)&quot;&gt;Permanent Drawer&lt;/h1&gt;\n    &lt;p :class=&quot;$tt(&#39;body1&#39;)&quot;&gt;It sits to the left of this content.&lt;/p&gt;\n  &lt;/main&gt;\n&lt;/div&gt;</code></pre>\n'},nbki:function(t,e){t.exports='<pre><code class="language-html">&lt;div id=&quot;light-on-bg&quot; class=&quot;demo-color-combo&quot;&gt;\n  &lt;div&gt;\n    &lt;ui-icon-button :class=&quot;$textColor(&#39;primary&#39;, &#39;primary&#39;)&quot;\n      :on=&quot;icon1.on&quot;\n      :off=&quot;icon1.off&quot;&gt;\n    &lt;/ui-icon-button&gt;\n  &lt;/div&gt;\n  &lt;div class=&quot;mdc-theme--on-primary&quot;&gt;Light icon on background&lt;/div&gt;\n&lt;/div&gt;\n\n&lt;div id=&quot;dark-on-bg&quot; class=&quot;demo-color-combo&quot;&gt;\n  &lt;div :class=&quot;$themeColor(&#39;primary&#39;)&quot;&gt;\n    &lt;ui-icon-button\n      :on=&quot;icon1.on&quot;\n      :off=&quot;icon1.off&quot;&gt;\n    &lt;/ui-icon-button&gt;\n  &lt;/div&gt;\n  &lt;div&gt;Dark icon on background&lt;/div&gt;\n&lt;/div&gt;\n\n&lt;div id=&quot;custom-color-combo&quot; class=&quot;demo-color-combo&quot;&gt;\n  &lt;div&gt;\n    &lt;ui-icon-button\n      :on=&quot;icon1.on&quot;\n      :off=&quot;icon1.off&quot;&gt;\n    &lt;/ui-icon-button&gt;\n  &lt;/div&gt;\n  &lt;div&gt;Custom color&lt;/div&gt;\n&lt;/div&gt;</code></pre>\n<pre><code class="language-css">/* SASS code */\n.demo-color-combo {\n  width: 250px;\n  padding: 1rem;\n  border-radius: 4px;\n  display: inline-flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin-right: 8px;\n}\n\n#light-on-bg {\n  background-color: #3e82f7;\n}\n#light-on-bg .mdc-icon-button {\n  @include mdc-icon-toggle-ink-color(white);\n  @include mdc-states-base-color(white);\n  @include mdc-states-hover-opacity(0.1);\n  @include mdc-states-focus-opacity(0.3);\n  @include mdc-states-press-opacity(0.4);\n}\n\n#dark-on-bg {\n  background-color: #00bcd6;\n}\n#dark-on-bg .mdc-icon-button {\n  @include mdc-icon-toggle-ink-color(black);\n  @include mdc-states(black);\n}\n\n#custom-color-combo .mdc-icon-button {\n  @include mdc-icon-toggle-ink-color(#de442c);\n  @include mdc-states-base-color(#de442c);\n  @include mdc-states-hover-opacity(0.09);\n  @include mdc-states-focus-opacity(0.26);\n  @include mdc-states-press-opacity(0.35);\n}</code></pre>\n'},o6KT:function(t,e){t.exports='<pre><code class="language-html">&lt;section class=&quot;example&quot;&gt;\n  &lt;div&gt;\n    &lt;h2&gt;Theme Styles&lt;/h2&gt;\n    &lt;div :class=&quot;[&#39;demo-surface&#39;, $themeColor(&#39;primary&#39;)]&quot;\n      v-ripple=&quot;1&quot;\n      v-shadow=&quot;1&quot;&gt;\n      Primary\n    &lt;/div&gt;\n    &lt;div :class=&quot;[&#39;demo-surface&#39;, $themeColor(&#39;secondary&#39;)]&quot;\n      v-ripple=&quot;2&quot;\n      v-shadow=&quot;2&quot;&gt;\n      Secondary\n    &lt;/div&gt;\n  &lt;/div&gt;\n\n  &lt;div&gt;\n    &lt;h2&gt;Theme Styles - CSS Only&lt;/h2&gt;\n    &lt;div :class=&quot;[&#39;demo-surface&#39;, $themeColor(&#39;primary&#39;)]&quot;\n      v-ripple:cssOnly=&quot;1&quot;\n      v-shadow=&quot;2&quot;&gt;\n      Primary\n    &lt;/div&gt;\n    &lt;div :class=&quot;[&#39;demo-surface&#39;, $themeColor(&#39;secondary&#39;)]&quot;\n      v-ripple:cssOnly=&quot;2&quot;\n      v-shadow=&quot;2&quot;&gt;\n      Secondary\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/section&gt;</code></pre>\n'},oG7K:function(t,e){t.exports='<pre><code class="language-html">&lt;ui-list-nav class=&quot;demo-list&quot;&gt;\n  &lt;ui-item-link v-for=&quot;(item, index) in items&quot;\n    :key=&quot;index&quot;\n    v-ripple\n    :firstIcon=&quot;item.icon&quot;&gt;\n    {{ item.text }}\n  &lt;/ui-item-link&gt;\n&lt;/ui-list-nav&gt;</code></pre>\n'},oM9C:function(t,e){t.exports='<p>Default Usage</p>\n<pre><code class="language-js">import Vue from &#39;vue&#39;;\nimport BalmUI from &#39;balm-ui&#39;;\n\nVue.use(BalmUI, {\n  // Optional. Overwrite `&lt;ui-textfield&gt;` props.\n  UiTextfield: {\n    // some props\n  },\n  // Optional. Overwrite `&lt;ui-textfield-helptext&gt;` props.\n  UiTextfieldHelptext: {\n    // some props\n  },\n  // Optional. Overwrite `&lt;ui-textfield-icon&gt;` props.\n  UiTextfieldIcon: {\n    // some props\n  }\n});</code></pre>\n<p>Standalone Usage</p>\n<pre><code class="language-js">import Vue from &#39;vue&#39;;\nimport UiTextfieldComponents from &#39;balm-ui/components/textfield&#39;;\n\n// (Recommended) Splitting CSS out from the main application, see BalmUI advanced usage.\nimport &#39;balm-ui/components/core.css&#39;;\nimport &#39;balm-ui/components/textfield.css&#39;;\nimport &#39;balm-ui/components/icon.css&#39;; // Optional\n\nVue.use(UiTextfieldComponents, {\n  // Optional. Overwrite `&lt;ui-textfield&gt;` props.\n  UiTextfield: {\n    // some props\n  },\n  // Optional. Overwrite `&lt;ui-textfield-helptext&gt;` props.\n  UiTextfieldHelptext: {\n    // some props\n  },\n  // Optional. Overwrite `&lt;ui-textfield-icon&gt;` props.\n  UiTextfieldIcon: {\n    // some props\n  }\n});</code></pre>\n'},oQYw:function(t,e){t.exports='<pre><code class="language-html">&lt;ui-chip-set&gt;\n  &lt;ui-chip v-for=&quot;(item, index) in actionList&quot;\n    :key=&quot;index&quot;\n    class=&quot;demo-chip custom-chip-primary&quot;&gt;\n    &lt;ui-chip-text&gt;{{ item.name }}&lt;/ui-chip-text&gt;\n  &lt;/ui-chip&gt;\n&lt;/ui-chip-set&gt;\n&lt;ui-chip-set&gt;\n  &lt;ui-chip v-for=&quot;(item, index) in actionList&quot;\n    :key=&quot;index&quot;\n    class=&quot;demo-chip custom-chip-secondary&quot;&gt;\n    &lt;ui-chip-text&gt;{{ item.name }}&lt;/ui-chip-text&gt;\n  &lt;/ui-chip&gt;\n&lt;/ui-chip-set&gt;</code></pre>\n<pre><code class="language-js">export default {\n  data() {\n    return {\n      actionList: [\n        {\n          icon: &#39;wb_sunny&#39;,\n          name: &#39;Turn on lights&#39;\n        },\n        {\n          icon: &#39;bookmark&#39;,\n          name: &#39;Bookmark&#39;\n        },\n        {\n          icon: &#39;alarm&#39;,\n          name: &#39;Set alarm&#39;\n        },\n        {\n          icon: &#39;directions&#39;,\n          name: &#39;Get directions&#39;\n        }\n      ]\n    };\n  }\n};</code></pre>\n'},"p/y3":function(t,e){t.exports='<pre><code class="language-html">&lt;div class=&quot;demo-theme-color-section__row&quot;&gt;\n  &lt;fieldset class=&quot;demo-fieldset--color&quot;&gt;\n    &lt;legend :class=&quot;$tt(&#39;subtitle1&#39;)&quot;&gt;Text on user-defined light background&lt;/legend&gt;\n\n    &lt;div class=&quot;demo-theme-color-group&quot;&gt;\n      &lt;div :class=&quot;[&#39;demo-theme-text-row demo-theme-bg--custom-light&#39;, $tt(&#39;body2&#39;)]&quot;&gt;\n        &lt;span :class=&quot;[&#39;demo-theme-text-style&#39;, $textColor(&#39;primary&#39;, &#39;light&#39;)]&quot;&gt;Primary&lt;/span&gt;\n        &lt;span :class=&quot;[&#39;demo-theme-text-style&#39;, $textColor(&#39;secondary&#39;, &#39;light&#39;)]&quot;&gt;Secondary&lt;/span&gt;\n        &lt;span :class=&quot;[&#39;demo-theme-text-style&#39;, $textColor(&#39;hint&#39;, &#39;light&#39;)]&quot;&gt;Hint&lt;/span&gt;\n        &lt;span :class=&quot;[&#39;demo-theme-text-style&#39;, $textColor(&#39;disabled&#39;, &#39;light&#39;)]&quot;&gt;Disabled&lt;/span&gt;\n        &lt;span :class=&quot;[&#39;demo-theme-text-style&#39;, $textColor(&#39;icon&#39;, &#39;light&#39;), &#39;material-icons&#39;]&quot;&gt;favorite&lt;/span&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n  &lt;/fieldset&gt;\n\n  &lt;fieldset class=&quot;demo-fieldset--color&quot;&gt;\n    &lt;legend :class=&quot;$tt(&#39;subtitle1&#39;)&quot;&gt;Text on user-defined dark background&lt;/legend&gt;\n\n    &lt;div class=&quot;demo-theme-color-group&quot;&gt;\n      &lt;div :class=&quot;[&#39;demo-theme-text-row demo-theme-bg--custom-dark&#39;, $tt(&#39;body2&#39;)]&quot;&gt;\n        &lt;span :class=&quot;[&#39;demo-theme-text-style&#39;, $textColor(&#39;primary&#39;, &#39;dark&#39;)]&quot;&gt;Primary&lt;/span&gt;\n        &lt;span :class=&quot;[&#39;demo-theme-text-style&#39;, $textColor(&#39;secondary&#39;, &#39;dark&#39;)]&quot;&gt;Secondary&lt;/span&gt;\n        &lt;span :class=&quot;[&#39;demo-theme-text-style&#39;, $textColor(&#39;hint&#39;, &#39;dark&#39;)]&quot;&gt;Hint&lt;/span&gt;\n        &lt;span :class=&quot;[&#39;demo-theme-text-style&#39;, $textColor(&#39;disabled&#39;, &#39;dark&#39;)]&quot;&gt;Disabled&lt;/span&gt;\n        &lt;span :class=&quot;[&#39;demo-theme-text-style&#39;, $textColor(&#39;icon&#39;, &#39;dark&#39;), &#39;material-icons&#39;]&quot;&gt;favorite&lt;/span&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n  &lt;/fieldset&gt;\n&lt;/div&gt;</code></pre>\n'},pCC8:function(t,e){t.exports='<p>Default Usage</p>\n<pre><code class="language-js">import Vue from &#39;vue&#39;;\nimport BalmUI from &#39;balm-ui&#39;;\n\nVue.use(BalmUI);</code></pre>\n<p>Standalone Usage</p>\n<pre><code class="language-js">import Vue from &#39;vue&#39;;\nimport shape from &#39;balm-ui/directives/shape&#39;;\n\n// (Recommended) Splitting CSS out from the main application, see BalmUI advanced usage.\nimport &#39;balm-ui/directives/shape.css&#39;;\n\nVue.directive(shape.name, shape);</code></pre>\n'},poPe:function(t,e){t.exports='<pre><code class="language-html">&lt;ui-button raised @click=&quot;$balmUI.onOpen(&#39;open&#39;)&quot;&gt;Show Dialog&lt;/ui-button&gt;\n\n&lt;ui-dialog\n  v-model=&quot;open&quot;\n  @confirm=&quot;onConfirm&quot;&gt;\n  &lt;ui-dialog-header&gt;Use Google&#39;s location service?&lt;/ui-dialog-header&gt;\n  &lt;ui-dialog-body&gt;\n    &lt;p&gt;Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.&lt;/p&gt;\n  &lt;/ui-dialog-body&gt;\n  &lt;ui-dialog-footer&gt;&lt;/ui-dialog-footer&gt;\n&lt;/ui-dialog&gt;</code></pre>\n<pre><code class="language-js">export default {\n  data() {\n    return {\n      open: false\n    };\n  },\n  methods: {\n    onConfirm(result) {\n      if (result) {\n        console.log(&#39;ok&#39;);\n      } else {\n        console.log(&#39;cancel&#39;);\n      }\n    }\n  }\n};</code></pre>\n'},sK9k:function(t,e){t.exports='<pre><code class="language-html">&lt;ui-button&gt;Baseline&lt;/ui-button&gt;\n&lt;ui-button dense&gt;Dense&lt;/ui-button&gt;\n&lt;ui-button class=&quot;secondary-text-button&quot;&gt;Secondary&lt;/ui-button&gt;\n&lt;ui-button icon=&quot;favorite&quot;&gt;Icon&lt;/ui-button&gt;\n&lt;ui-button&gt;\n  &lt;template slot-scope=&quot;{ className }&quot;&gt;\n    &lt;!-- Custom SVG --&gt;\n    &lt;ui-logo :class=&quot;className.icon&quot;&gt;&lt;/ui-logo&gt;\n    SVG Icon\n  &lt;/template&gt;\n&lt;/ui-button&gt;\n&lt;ui-link&gt;Link&lt;/ui-link&gt;</code></pre>\n<pre><code class="language-css">/* Sass code */\n.mdc-button.secondary-text-button {\n  @include mdc-button-ink-color($mdc-theme-secondary);\n  @include mdc-states(secondary);\n}</code></pre>\n'},tDea:function(t,e){t.exports='<p>Default Usage</p>\n<pre><code class="language-js">import Vue from &#39;vue&#39;;\nimport BalmUI from &#39;balm-ui&#39;;\n\nVue.use(BalmUI);</code></pre>\n<p>Standalone Usage</p>\n<pre><code class="language-js">import Vue from &#39;vue&#39;;\nimport theme from &#39;balm-ui/plugins/theme&#39;;\n\n// (Recommended) Splitting CSS out from the main application, see BalmUI advanced usage.\nimport &#39;balm-ui/components/core.css&#39;; // (Include &#39;plugins/theme.css&#39;)\n// OR\nimport &#39;balm-ui/plugins/theme.css&#39;;\n\nVue.use(theme);</code></pre>\n'},"tU+b":function(t,e){t.exports='<pre><code class="language-html">&lt;ui-image-list\n  masonry\n  :withTextProtection=&quot;labelsType === 2&quot;&gt;\n  &lt;ui-image-item v-for=&quot;(item, index) in list&quot; :key=&quot;index&quot;\n    :src=&quot;require(`../../../images/photos/${item}.jpg`)&quot;&gt;\n    &lt;ui-image-label v-if=&quot;labelsType&quot;&gt;Text label&lt;/ui-image-label&gt;\n  &lt;/ui-image-item&gt;\n&lt;/ui-image-list&gt;</code></pre>\n<pre><code class="language-js">export default {\n  data() {\n    return {\n      labelsType: 1\n    };\n  }\n};</code></pre>\n'},tZAW:function(t,e){t.exports='<pre><code class="language-html">&lt;ui-textfield outlined&gt;\n  Your Name\n&lt;/ui-textfield&gt;</code></pre>\n'},"v/FX":function(t,e){t.exports='<pre><code class="language-html">&lt;ui-grid class=&quot;demo-grid&quot; fixedColumnWidth position=&quot;right&quot;&gt;\n  &lt;ui-grid-cell class=&quot;demo-cell&quot; colspan=&quot;1&quot;&gt;&lt;/ui-grid-cell&gt;\n  &lt;ui-grid-cell class=&quot;demo-cell&quot; colspan=&quot;1&quot;&gt;&lt;/ui-grid-cell&gt;\n  &lt;ui-grid-cell class=&quot;demo-cell&quot; colspan=&quot;1&quot;&gt;&lt;/ui-grid-cell&gt;\n&lt;/ui-grid&gt;</code></pre>\n'},wloq:function(t,e){t.exports='<p>Default Usage</p>\n<pre><code class="language-js">import Vue from &#39;vue&#39;;\nimport BalmUI from &#39;balm-ui&#39;;\n\nVue.use(BalmUI, {\n  // Optional. Overwrite `&lt;ui-card&gt;` props.\n  UiCard: {\n    // some props\n  },\n  // Optional. Overwrite `&lt;ui-card-media&gt;` props.\n  UiCardMedia: {\n    // some props\n  },\n  // Optional. Overwrite `&lt;ui-card-actions&gt;` props.\n  UiCardActions: {\n    // some props\n  }\n});</code></pre>\n<p>Standalone Usage</p>\n<pre><code class="language-js">import Vue from &#39;vue&#39;;\nimport UiCardComponents from &#39;balm-ui/components/card&#39;;\n\n// (Recommended) Splitting CSS out from the main application, see BalmUI advanced usage.\nimport &#39;balm-ui/components/core.css&#39;;\nimport &#39;balm-ui/components/card.css&#39;;\n\nVue.use(UiCardComponents, {\n  // Optional. Overwrite `&lt;ui-card&gt;` props.\n  UiCard: {\n    // some props\n  },\n  // Optional. Overwrite `&lt;ui-card-media&gt;` props.\n  UiCardMedia: {\n    // some props\n  },\n  // Optional. Overwrite `&lt;ui-card-actions&gt;` props.\n  UiCardActions: {\n    // some props\n  }\n});</code></pre>\n'},x9bS:function(t,e){t.exports='<p>Default Usage</p>\n<pre><code class="language-js">import Vue from &#39;vue&#39;;\nimport BalmUI from &#39;balm-ui&#39;;\n\nVue.use(BalmUI, {\n  // Optional. Overwrite `&lt;ui-radio&gt;` props.\n  UiRadio: {\n    // some props\n  }\n});</code></pre>\n<p>Standalone Usage</p>\n<pre><code class="language-js">import Vue from &#39;vue&#39;;\nimport UiRadio from &#39;balm-ui/components/radio&#39;;\n\n// (Recommended) Splitting CSS out from the main application, see BalmUI advanced usage.\nimport &#39;balm-ui/components/core.css&#39;;\nimport &#39;balm-ui/components/radio.css&#39;;\n\n// Optional. Overwrite `&lt;ui-radio&gt;` props.\nVue.use(UiRadio, {\n  // some props\n});</code></pre>\n'},y89u:function(t,e){t.exports='<pre><code class="language-html">&lt;div&gt;\n  &lt;ui-textfield\n    v-model=&quot;title&quot;\n    fullwidth\n    placeholder=&quot;Subject&quot;&gt;\n  &lt;/ui-textfield&gt;\n  &lt;ui-textfield type=&quot;textarea&quot;\n    v-model=&quot;content&quot;\n    fullwidth\n    rows=&quot;8&quot;&gt;\n    Textarea Label\n  &lt;/ui-textfield&gt;\n&lt;/div&gt;</code></pre>\n<pre><code class="language-js">export default {\n  data() {\n    return {\n      title: &#39;&#39;,\n      content: &#39;&#39;\n    };\n  }\n};</code></pre>\n'},"yAg/":function(t,e){t.exports='<pre><code class="language-html">&lt;section&gt;\n  &lt;ui-select id=&quot;select-preselected&quot;\n    v-model=&quot;selected&quot;\n    :options=&quot;options&quot;&gt;\n    Food Group\n  &lt;/ui-select&gt;\n&lt;/section&gt;</code></pre>\n<pre><code class="language-js">const options = [\n  {\n    label: &#39;Fruit Roll Ups&#39;,\n    value: &#39;fruit-roll-ups&#39;\n  },\n  {\n    label: &#39;Candy (cotton)&#39;,\n    value: &#39;cotton-candy&#39;\n  },\n  {\n    label: &#39;Vegetables&#39;,\n    value: &#39;vegetables&#39;\n  },\n  {\n    label: &#39;Noodles&#39;,\n    value: &#39;noodles&#39;\n  }\n];\n\nexport default {\n  data() {\n    return {\n      options,\n      selected: &#39;fruit-roll-ups&#39;\n    };\n  }\n};</code></pre>\n'},yUax:function(t,e){t.exports='<pre><code class="language-html">&lt;ui-textfield id=&quot;fouc&quot; v-model=&quot;value&quot;&gt;\n  Label floating above\n&lt;/ui-textfield&gt;</code></pre>\n<pre><code class="language-js">export default {\n  data() {\n    return {\n      value: &#39;Pre-filled value&#39;\n    };\n  }\n};</code></pre>\n'},ynvr:function(t,e){t.exports='<pre><code class="language-html">&lt;ui-grid class=&quot;demo-grid&quot;&gt;\n  &lt;ui-grid-cell class=&quot;demo-parent-cell&quot; colspan=&quot;4&quot;&gt;\n    &lt;ui-grid-inner&gt;\n      &lt;ui-grid-cell class=&quot;demo-child-cell demo-cell&quot; colspan=&quot;4&quot;&gt;\n        &lt;span&gt;Child 4&lt;/span&gt;\n      &lt;/ui-grid-cell&gt;\n      &lt;ui-grid-cell class=&quot;demo-child-cell demo-cell&quot; colspan=&quot;4&quot;&gt;\n        &lt;span&gt;Child 4&lt;/span&gt;\n      &lt;/ui-grid-cell&gt;\n      &lt;ui-grid-cell class=&quot;demo-child-cell demo-cell&quot; colspan=&quot;4&quot;&gt;\n        &lt;span&gt;Child 4&lt;/span&gt;\n      &lt;/ui-grid-cell&gt;\n    &lt;/ui-grid-inner&gt;\n    &lt;span&gt;Parent 4&lt;/span&gt;\n  &lt;/ui-grid-cell&gt;\n  &lt;ui-grid-cell class=&quot;demo-cell&quot; colspan=&quot;4&quot;&gt;4&lt;/ui-grid-cell&gt;\n  &lt;ui-grid-cell class=&quot;demo-cell&quot; colspan=&quot;4&quot;&gt;4&lt;/ui-grid-cell&gt;\n&lt;/ui-grid&gt;</code></pre>\n'},z9gS:function(t,e){t.exports='<pre><code class="language-html">&lt;ui-button raised @click=&quot;$balmUI.onShow(&#39;open&#39;)&quot;&gt;Show Scrolling Dialog&lt;/ui-button&gt;\n\n&lt;ui-dialog\n  v-model=&quot;open&quot;\n  @confirm=&quot;onConfirm&quot;&gt;\n  &lt;ui-dialog-header&gt;Choose a Ringtone&lt;/ui-dialog-header&gt;\n  &lt;ui-dialog-body scrollable&gt;\n    &lt;ui-list&gt;\n      &lt;ui-item v-for=&quot;(item, index) in list&quot; :key=&quot;index&quot;&gt;\n        {{ item }}\n      &lt;/ui-item&gt;\n    &lt;/ui-list&gt;\n  &lt;/ui-dialog-body&gt;\n  &lt;ui-dialog-footer&gt;&lt;/ui-dialog-footer&gt;\n&lt;/ui-dialog&gt;</code></pre>\n<pre><code class="language-js">export default {\n  data() {\n    return {\n      open: false\n    };\n  },\n  methods: {\n    onConfirm(result) {\n      if (result) {\n        console.log(&#39;ok&#39;);\n      } else {\n        console.log(&#39;cancel&#39;);\n      }\n    }\n  }\n};</code></pre>\n'}}]);